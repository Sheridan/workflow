/* soapClient.cpp
   Generated by gSOAP 2.7.17 from ./z_soap/z_soap.h
   Copyright(C) 2000-2010, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.7.17 2014-06-20 12:15:48 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__authRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__authRequest *ns4__AuthRequest, ns4__authResponse *ns4__AuthResponse)
{	struct __ns1__authRequest soap_tmp___ns1__authRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/Auth";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__authRequest.ns4__AuthRequest = ns4__AuthRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__authRequest(soap, &soap_tmp___ns1__authRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__authRequest(soap, &soap_tmp___ns1__authRequest, "-ns1:authRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__authRequest(soap, &soap_tmp___ns1__authRequest, "-ns1:authRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__AuthResponse)
		return soap_closesock(soap);
	ns4__AuthResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__AuthResponse->soap_get(soap, "ns4:AuthResponse", "ns4:authResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__autoCompleteGalRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__autoCompleteGalRequest *ns4__AutoCompleteGalRequest, ns4__autoCompleteGalResponse *ns4__AutoCompleteGalResponse)
{	struct __ns1__autoCompleteGalRequest soap_tmp___ns1__autoCompleteGalRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/AutoCompleteGal";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__autoCompleteGalRequest.ns4__AutoCompleteGalRequest = ns4__AutoCompleteGalRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__autoCompleteGalRequest(soap, &soap_tmp___ns1__autoCompleteGalRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__autoCompleteGalRequest(soap, &soap_tmp___ns1__autoCompleteGalRequest, "-ns1:autoCompleteGalRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__autoCompleteGalRequest(soap, &soap_tmp___ns1__autoCompleteGalRequest, "-ns1:autoCompleteGalRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__AutoCompleteGalResponse)
		return soap_closesock(soap);
	ns4__AutoCompleteGalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__AutoCompleteGalResponse->soap_get(soap, "ns4:AutoCompleteGalResponse", "ns4:autoCompleteGalResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__changePasswordRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__changePasswordRequest *ns4__ChangePasswordRequest, ns4__changePasswordResponse *ns4__ChangePasswordResponse)
{	struct __ns1__changePasswordRequest soap_tmp___ns1__changePasswordRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/ChangePassword";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__changePasswordRequest.ns4__ChangePasswordRequest = ns4__ChangePasswordRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__changePasswordRequest(soap, &soap_tmp___ns1__changePasswordRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__changePasswordRequest(soap, &soap_tmp___ns1__changePasswordRequest, "-ns1:changePasswordRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__changePasswordRequest(soap, &soap_tmp___ns1__changePasswordRequest, "-ns1:changePasswordRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__ChangePasswordResponse)
		return soap_closesock(soap);
	ns4__ChangePasswordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ChangePasswordResponse->soap_get(soap, "ns4:ChangePasswordResponse", "ns4:changePasswordResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkLicenseRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__checkLicenseRequest *ns4__CheckLicenseRequest, ns4__checkLicenseResponse *ns4__CheckLicenseResponse)
{	struct __ns1__checkLicenseRequest soap_tmp___ns1__checkLicenseRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/CheckLicense";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__checkLicenseRequest.ns4__CheckLicenseRequest = ns4__CheckLicenseRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__checkLicenseRequest(soap, &soap_tmp___ns1__checkLicenseRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkLicenseRequest(soap, &soap_tmp___ns1__checkLicenseRequest, "-ns1:checkLicenseRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkLicenseRequest(soap, &soap_tmp___ns1__checkLicenseRequest, "-ns1:checkLicenseRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__CheckLicenseResponse)
		return soap_closesock(soap);
	ns4__CheckLicenseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__CheckLicenseResponse->soap_get(soap, "ns4:CheckLicenseResponse", "ns4:checkLicenseResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkRightsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__checkRightsRequest *ns4__CheckRightsRequest, ns4__checkRightsResponse *ns4__CheckRightsResponse)
{	struct __ns1__checkRightsRequest soap_tmp___ns1__checkRightsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/CheckRights";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__checkRightsRequest.ns4__CheckRightsRequest = ns4__CheckRightsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__checkRightsRequest(soap, &soap_tmp___ns1__checkRightsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkRightsRequest(soap, &soap_tmp___ns1__checkRightsRequest, "-ns1:checkRightsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkRightsRequest(soap, &soap_tmp___ns1__checkRightsRequest, "-ns1:checkRightsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__CheckRightsResponse)
		return soap_closesock(soap);
	ns4__CheckRightsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__CheckRightsResponse->soap_get(soap, "ns4:CheckRightsResponse", "ns4:checkRightsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createDistributionListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__createDistributionListRequest *ns4__CreateDistributionListRequest, ns4__createDistributionListResponse *ns4__CreateDistributionListResponse)
{	struct __ns1__createDistributionListRequest soap_tmp___ns1__createDistributionListRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/CreateDistributionList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createDistributionListRequest.ns4__CreateDistributionListRequest = ns4__CreateDistributionListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createDistributionListRequest(soap, &soap_tmp___ns1__createDistributionListRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createDistributionListRequest(soap, &soap_tmp___ns1__createDistributionListRequest, "-ns1:createDistributionListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createDistributionListRequest(soap, &soap_tmp___ns1__createDistributionListRequest, "-ns1:createDistributionListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__CreateDistributionListResponse)
		return soap_closesock(soap);
	ns4__CreateDistributionListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__CreateDistributionListResponse->soap_get(soap, "ns4:CreateDistributionListResponse", "ns4:createDistributionListResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createIdentityRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__createIdentityRequest *ns4__CreateIdentityRequest, ns4__createIdentityResponse *ns4__CreateIdentityResponse)
{	struct __ns1__createIdentityRequest soap_tmp___ns1__createIdentityRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/CreateIdentity";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createIdentityRequest.ns4__CreateIdentityRequest = ns4__CreateIdentityRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createIdentityRequest(soap, &soap_tmp___ns1__createIdentityRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createIdentityRequest(soap, &soap_tmp___ns1__createIdentityRequest, "-ns1:createIdentityRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createIdentityRequest(soap, &soap_tmp___ns1__createIdentityRequest, "-ns1:createIdentityRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__CreateIdentityResponse)
		return soap_closesock(soap);
	ns4__CreateIdentityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__CreateIdentityResponse->soap_get(soap, "ns4:CreateIdentityResponse", "ns4:createIdentityResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createSignatureRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__createSignatureRequest *ns4__CreateSignatureRequest, ns4__createSignatureResponse *ns4__CreateSignatureResponse)
{	struct __ns1__createSignatureRequest soap_tmp___ns1__createSignatureRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/CreateSignature";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createSignatureRequest.ns4__CreateSignatureRequest = ns4__CreateSignatureRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createSignatureRequest(soap, &soap_tmp___ns1__createSignatureRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createSignatureRequest(soap, &soap_tmp___ns1__createSignatureRequest, "-ns1:createSignatureRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createSignatureRequest(soap, &soap_tmp___ns1__createSignatureRequest, "-ns1:createSignatureRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__CreateSignatureResponse)
		return soap_closesock(soap);
	ns4__CreateSignatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__CreateSignatureResponse->soap_get(soap, "ns4:CreateSignatureResponse", "ns4:createSignatureResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteIdentityRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__deleteIdentityRequest *ns4__DeleteIdentityRequest, ns4__deleteIdentityResponse *ns4__DeleteIdentityResponse)
{	struct __ns1__deleteIdentityRequest soap_tmp___ns1__deleteIdentityRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/DeleteIdentity";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__deleteIdentityRequest.ns4__DeleteIdentityRequest = ns4__DeleteIdentityRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteIdentityRequest(soap, &soap_tmp___ns1__deleteIdentityRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteIdentityRequest(soap, &soap_tmp___ns1__deleteIdentityRequest, "-ns1:deleteIdentityRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteIdentityRequest(soap, &soap_tmp___ns1__deleteIdentityRequest, "-ns1:deleteIdentityRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__DeleteIdentityResponse)
		return soap_closesock(soap);
	ns4__DeleteIdentityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__DeleteIdentityResponse->soap_get(soap, "ns4:DeleteIdentityResponse", "ns4:deleteIdentityResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteSignatureRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__deleteSignatureRequest *ns4__DeleteSignatureRequest, ns4__deleteSignatureResponse *ns4__DeleteSignatureResponse)
{	struct __ns1__deleteSignatureRequest soap_tmp___ns1__deleteSignatureRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/DeleteSignature";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__deleteSignatureRequest.ns4__DeleteSignatureRequest = ns4__DeleteSignatureRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteSignatureRequest(soap, &soap_tmp___ns1__deleteSignatureRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteSignatureRequest(soap, &soap_tmp___ns1__deleteSignatureRequest, "-ns1:deleteSignatureRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteSignatureRequest(soap, &soap_tmp___ns1__deleteSignatureRequest, "-ns1:deleteSignatureRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__DeleteSignatureResponse)
		return soap_closesock(soap);
	ns4__DeleteSignatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__DeleteSignatureResponse->soap_get(soap, "ns4:DeleteSignatureResponse", "ns4:deleteSignatureResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__discoverRightsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__discoverRightsRequest *ns4__DiscoverRightsRequest, ns4__discoverRightsResponse *ns4__DiscoverRightsResponse)
{	struct __ns1__discoverRightsRequest soap_tmp___ns1__discoverRightsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/DiscoverRights";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__discoverRightsRequest.ns4__DiscoverRightsRequest = ns4__DiscoverRightsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__discoverRightsRequest(soap, &soap_tmp___ns1__discoverRightsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__discoverRightsRequest(soap, &soap_tmp___ns1__discoverRightsRequest, "-ns1:discoverRightsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__discoverRightsRequest(soap, &soap_tmp___ns1__discoverRightsRequest, "-ns1:discoverRightsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__DiscoverRightsResponse)
		return soap_closesock(soap);
	ns4__DiscoverRightsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__DiscoverRightsResponse->soap_get(soap, "ns4:DiscoverRightsResponse", "ns4:discoverRightsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__distributionListActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__distributionListActionRequest *ns4__DistributionListActionRequest, ns4__distributionListActionResponse *ns4__DistributionListActionResponse)
{	struct __ns1__distributionListActionRequest soap_tmp___ns1__distributionListActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/DistributionListAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__distributionListActionRequest.ns4__DistributionListActionRequest = ns4__DistributionListActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__distributionListActionRequest(soap, &soap_tmp___ns1__distributionListActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__distributionListActionRequest(soap, &soap_tmp___ns1__distributionListActionRequest, "-ns1:distributionListActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__distributionListActionRequest(soap, &soap_tmp___ns1__distributionListActionRequest, "-ns1:distributionListActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__DistributionListActionResponse)
		return soap_closesock(soap);
	ns4__DistributionListActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__DistributionListActionResponse->soap_get(soap, "ns4:DistributionListActionResponse", "ns4:distributionListActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__endSessionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__endSessionRequest *ns4__EndSessionRequest, ns4__endSessionResponse *ns4__EndSessionResponse)
{	struct __ns1__endSessionRequest soap_tmp___ns1__endSessionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/EndSession";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__endSessionRequest.ns4__EndSessionRequest = ns4__EndSessionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__endSessionRequest(soap, &soap_tmp___ns1__endSessionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__endSessionRequest(soap, &soap_tmp___ns1__endSessionRequest, "-ns1:endSessionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__endSessionRequest(soap, &soap_tmp___ns1__endSessionRequest, "-ns1:endSessionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__EndSessionResponse)
		return soap_closesock(soap);
	ns4__EndSessionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__EndSessionResponse->soap_get(soap, "ns4:EndSessionResponse", "ns4:endSessionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAccountDistributionListsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getAccountDistributionListsRequest *ns4__GetAccountDistributionListsRequest, ns4__getAccountDistributionListsResponse *ns4__GetAccountDistributionListsResponse)
{	struct __ns1__getAccountDistributionListsRequest soap_tmp___ns1__getAccountDistributionListsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetAccountDistributionLists";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAccountDistributionListsRequest.ns4__GetAccountDistributionListsRequest = ns4__GetAccountDistributionListsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAccountDistributionListsRequest(soap, &soap_tmp___ns1__getAccountDistributionListsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAccountDistributionListsRequest(soap, &soap_tmp___ns1__getAccountDistributionListsRequest, "-ns1:getAccountDistributionListsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAccountDistributionListsRequest(soap, &soap_tmp___ns1__getAccountDistributionListsRequest, "-ns1:getAccountDistributionListsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetAccountDistributionListsResponse)
		return soap_closesock(soap);
	ns4__GetAccountDistributionListsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetAccountDistributionListsResponse->soap_get(soap, "ns4:GetAccountDistributionListsResponse", "ns4:getAccountDistributionListsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAccountInfoRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getAccountInfoRequest *ns4__GetAccountInfoRequest, ns4__getAccountInfoResponse *ns4__GetAccountInfoResponse)
{	struct __ns1__getAccountInfoRequest soap_tmp___ns1__getAccountInfoRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetAccountInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAccountInfoRequest.ns4__GetAccountInfoRequest = ns4__GetAccountInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAccountInfoRequest(soap, &soap_tmp___ns1__getAccountInfoRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAccountInfoRequest(soap, &soap_tmp___ns1__getAccountInfoRequest, "-ns1:getAccountInfoRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAccountInfoRequest(soap, &soap_tmp___ns1__getAccountInfoRequest, "-ns1:getAccountInfoRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetAccountInfoResponse)
		return soap_closesock(soap);
	ns4__GetAccountInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetAccountInfoResponse->soap_get(soap, "ns4:GetAccountInfoResponse", "ns4:getAccountInfoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAllLocalesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getAllLocalesRequest *ns4__GetAllLocalesRequest, ns4__getAllLocalesResponse *ns4__GetAllLocalesResponse)
{	struct __ns1__getAllLocalesRequest soap_tmp___ns1__getAllLocalesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetAllLocales";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAllLocalesRequest.ns4__GetAllLocalesRequest = ns4__GetAllLocalesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAllLocalesRequest(soap, &soap_tmp___ns1__getAllLocalesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAllLocalesRequest(soap, &soap_tmp___ns1__getAllLocalesRequest, "-ns1:getAllLocalesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAllLocalesRequest(soap, &soap_tmp___ns1__getAllLocalesRequest, "-ns1:getAllLocalesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetAllLocalesResponse)
		return soap_closesock(soap);
	ns4__GetAllLocalesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetAllLocalesResponse->soap_get(soap, "ns4:GetAllLocalesResponse", "ns4:getAllLocalesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAvailableCsvFormatsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getAvailableCsvFormatsRequest *ns4__GetAvailableCsvFormatsRequest, ns4__getAvailableCsvFormatsResponse *ns4__GetAvailableCsvFormatsResponse)
{	struct __ns1__getAvailableCsvFormatsRequest soap_tmp___ns1__getAvailableCsvFormatsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetAvailableCsvFormats";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAvailableCsvFormatsRequest.ns4__GetAvailableCsvFormatsRequest = ns4__GetAvailableCsvFormatsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAvailableCsvFormatsRequest(soap, &soap_tmp___ns1__getAvailableCsvFormatsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAvailableCsvFormatsRequest(soap, &soap_tmp___ns1__getAvailableCsvFormatsRequest, "-ns1:getAvailableCsvFormatsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAvailableCsvFormatsRequest(soap, &soap_tmp___ns1__getAvailableCsvFormatsRequest, "-ns1:getAvailableCsvFormatsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetAvailableCsvFormatsResponse)
		return soap_closesock(soap);
	ns4__GetAvailableCsvFormatsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetAvailableCsvFormatsResponse->soap_get(soap, "ns4:GetAvailableCsvFormatsResponse", "ns4:getAvailableCsvFormatsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAvailableLocalesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getAvailableLocalesRequest *ns4__GetAvailableLocalesRequest, ns4__getAvailableLocalesResponse *ns4__GetAvailableLocalesResponse)
{	struct __ns1__getAvailableLocalesRequest soap_tmp___ns1__getAvailableLocalesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetAvailableLocales";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAvailableLocalesRequest.ns4__GetAvailableLocalesRequest = ns4__GetAvailableLocalesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAvailableLocalesRequest(soap, &soap_tmp___ns1__getAvailableLocalesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAvailableLocalesRequest(soap, &soap_tmp___ns1__getAvailableLocalesRequest, "-ns1:getAvailableLocalesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAvailableLocalesRequest(soap, &soap_tmp___ns1__getAvailableLocalesRequest, "-ns1:getAvailableLocalesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetAvailableLocalesResponse)
		return soap_closesock(soap);
	ns4__GetAvailableLocalesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetAvailableLocalesResponse->soap_get(soap, "ns4:GetAvailableLocalesResponse", "ns4:getAvailableLocalesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAvailableSkinsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getAvailableSkinsRequest *ns4__GetAvailableSkinsRequest, ns4__getAvailableSkinsResponse *ns4__GetAvailableSkinsResponse)
{	struct __ns1__getAvailableSkinsRequest soap_tmp___ns1__getAvailableSkinsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetAvailableSkins";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAvailableSkinsRequest.ns4__GetAvailableSkinsRequest = ns4__GetAvailableSkinsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAvailableSkinsRequest(soap, &soap_tmp___ns1__getAvailableSkinsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAvailableSkinsRequest(soap, &soap_tmp___ns1__getAvailableSkinsRequest, "-ns1:getAvailableSkinsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAvailableSkinsRequest(soap, &soap_tmp___ns1__getAvailableSkinsRequest, "-ns1:getAvailableSkinsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetAvailableSkinsResponse)
		return soap_closesock(soap);
	ns4__GetAvailableSkinsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetAvailableSkinsResponse->soap_get(soap, "ns4:GetAvailableSkinsResponse", "ns4:getAvailableSkinsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getDistributionListMembersRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getDistributionListMembersRequest *ns4__GetDistributionListMembersRequest, ns4__getDistributionListMembersResponse *ns4__GetDistributionListMembersResponse)
{	struct __ns1__getDistributionListMembersRequest soap_tmp___ns1__getDistributionListMembersRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetDistributionListMembers";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getDistributionListMembersRequest.ns4__GetDistributionListMembersRequest = ns4__GetDistributionListMembersRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getDistributionListMembersRequest(soap, &soap_tmp___ns1__getDistributionListMembersRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getDistributionListMembersRequest(soap, &soap_tmp___ns1__getDistributionListMembersRequest, "-ns1:getDistributionListMembersRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getDistributionListMembersRequest(soap, &soap_tmp___ns1__getDistributionListMembersRequest, "-ns1:getDistributionListMembersRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetDistributionListMembersResponse)
		return soap_closesock(soap);
	ns4__GetDistributionListMembersResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetDistributionListMembersResponse->soap_get(soap, "ns4:GetDistributionListMembersResponse", "ns4:getDistributionListMembersResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getDistributionListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getDistributionListRequest *ns4__GetDistributionListRequest, ns4__getDistributionListResponse *ns4__GetDistributionListResponse)
{	struct __ns1__getDistributionListRequest soap_tmp___ns1__getDistributionListRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetDistributionList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getDistributionListRequest.ns4__GetDistributionListRequest = ns4__GetDistributionListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getDistributionListRequest(soap, &soap_tmp___ns1__getDistributionListRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getDistributionListRequest(soap, &soap_tmp___ns1__getDistributionListRequest, "-ns1:getDistributionListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getDistributionListRequest(soap, &soap_tmp___ns1__getDistributionListRequest, "-ns1:getDistributionListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetDistributionListResponse)
		return soap_closesock(soap);
	ns4__GetDistributionListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetDistributionListResponse->soap_get(soap, "ns4:GetDistributionListResponse", "ns4:getDistributionListResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getIdentitiesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getIdentitiesRequest *ns4__GetIdentitiesRequest, ns4__getIdentitiesResponse *ns4__GetIdentitiesResponse)
{	struct __ns1__getIdentitiesRequest soap_tmp___ns1__getIdentitiesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetIdentities";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getIdentitiesRequest.ns4__GetIdentitiesRequest = ns4__GetIdentitiesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getIdentitiesRequest(soap, &soap_tmp___ns1__getIdentitiesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getIdentitiesRequest(soap, &soap_tmp___ns1__getIdentitiesRequest, "-ns1:getIdentitiesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getIdentitiesRequest(soap, &soap_tmp___ns1__getIdentitiesRequest, "-ns1:getIdentitiesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetIdentitiesResponse)
		return soap_closesock(soap);
	ns4__GetIdentitiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetIdentitiesResponse->soap_get(soap, "ns4:GetIdentitiesResponse", "ns4:getIdentitiesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getInfoRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getInfoRequest *ns4__GetInfoRequest, ns4__getInfoResponse *ns4__GetInfoResponse)
{	struct __ns1__getInfoRequest soap_tmp___ns1__getInfoRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getInfoRequest.ns4__GetInfoRequest = ns4__GetInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getInfoRequest(soap, &soap_tmp___ns1__getInfoRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getInfoRequest(soap, &soap_tmp___ns1__getInfoRequest, "-ns1:getInfoRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getInfoRequest(soap, &soap_tmp___ns1__getInfoRequest, "-ns1:getInfoRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetInfoResponse)
		return soap_closesock(soap);
	ns4__GetInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetInfoResponse->soap_get(soap, "ns4:GetInfoResponse", "ns4:getInfoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getPrefsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getPrefsRequest *ns4__GetPrefsRequest, ns4__getPrefsResponse *ns4__GetPrefsResponse)
{	struct __ns1__getPrefsRequest soap_tmp___ns1__getPrefsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetPrefs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPrefsRequest.ns4__GetPrefsRequest = ns4__GetPrefsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPrefsRequest(soap, &soap_tmp___ns1__getPrefsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPrefsRequest(soap, &soap_tmp___ns1__getPrefsRequest, "-ns1:getPrefsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPrefsRequest(soap, &soap_tmp___ns1__getPrefsRequest, "-ns1:getPrefsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetPrefsResponse)
		return soap_closesock(soap);
	ns4__GetPrefsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetPrefsResponse->soap_get(soap, "ns4:GetPrefsResponse", "ns4:getPrefsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getRightsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getRightsRequest *ns4__GetRightsRequest, ns4__getRightsResponse *ns4__GetRightsResponse)
{	struct __ns1__getRightsRequest soap_tmp___ns1__getRightsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetRights";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getRightsRequest.ns4__GetRightsRequest = ns4__GetRightsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getRightsRequest(soap, &soap_tmp___ns1__getRightsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getRightsRequest(soap, &soap_tmp___ns1__getRightsRequest, "-ns1:getRightsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getRightsRequest(soap, &soap_tmp___ns1__getRightsRequest, "-ns1:getRightsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetRightsResponse)
		return soap_closesock(soap);
	ns4__GetRightsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetRightsResponse->soap_get(soap, "ns4:GetRightsResponse", "ns4:getRightsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getSMIMEPublicCertsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getSMIMEPublicCertsRequest *ns4__GetSMIMEPublicCertsRequest, ns4__getSMIMEPublicCertsResponse *ns4__GetSMIMEPublicCertsResponse)
{	struct __ns1__getSMIMEPublicCertsRequest soap_tmp___ns1__getSMIMEPublicCertsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetSMIMEPublicCerts";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getSMIMEPublicCertsRequest.ns4__GetSMIMEPublicCertsRequest = ns4__GetSMIMEPublicCertsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getSMIMEPublicCertsRequest(soap, &soap_tmp___ns1__getSMIMEPublicCertsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getSMIMEPublicCertsRequest(soap, &soap_tmp___ns1__getSMIMEPublicCertsRequest, "-ns1:getSMIMEPublicCertsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getSMIMEPublicCertsRequest(soap, &soap_tmp___ns1__getSMIMEPublicCertsRequest, "-ns1:getSMIMEPublicCertsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetSMIMEPublicCertsResponse)
		return soap_closesock(soap);
	ns4__GetSMIMEPublicCertsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetSMIMEPublicCertsResponse->soap_get(soap, "ns4:GetSMIMEPublicCertsResponse", "ns4:getSMIMEPublicCertsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getShareInfoRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getShareInfoRequest *ns4__GetShareInfoRequest, ns4__getShareInfoResponse *ns4__GetShareInfoResponse)
{	struct __ns1__getShareInfoRequest soap_tmp___ns1__getShareInfoRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetShareInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getShareInfoRequest.ns4__GetShareInfoRequest = ns4__GetShareInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getShareInfoRequest(soap, &soap_tmp___ns1__getShareInfoRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getShareInfoRequest(soap, &soap_tmp___ns1__getShareInfoRequest, "-ns1:getShareInfoRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getShareInfoRequest(soap, &soap_tmp___ns1__getShareInfoRequest, "-ns1:getShareInfoRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetShareInfoResponse)
		return soap_closesock(soap);
	ns4__GetShareInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetShareInfoResponse->soap_get(soap, "ns4:GetShareInfoResponse", "ns4:getShareInfoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getSignaturesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getSignaturesRequest *ns4__GetSignaturesRequest, ns4__getSignaturesResponse *ns4__GetSignaturesResponse)
{	struct __ns1__getSignaturesRequest soap_tmp___ns1__getSignaturesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetSignatures";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getSignaturesRequest.ns4__GetSignaturesRequest = ns4__GetSignaturesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getSignaturesRequest(soap, &soap_tmp___ns1__getSignaturesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getSignaturesRequest(soap, &soap_tmp___ns1__getSignaturesRequest, "-ns1:getSignaturesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getSignaturesRequest(soap, &soap_tmp___ns1__getSignaturesRequest, "-ns1:getSignaturesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetSignaturesResponse)
		return soap_closesock(soap);
	ns4__GetSignaturesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetSignaturesResponse->soap_get(soap, "ns4:GetSignaturesResponse", "ns4:getSignaturesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getVersionInfoRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getVersionInfoRequest *ns4__GetVersionInfoRequest, ns4__getVersionInfoResponse *ns4__GetVersionInfoResponse)
{	struct __ns1__getVersionInfoRequest soap_tmp___ns1__getVersionInfoRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetVersionInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getVersionInfoRequest.ns4__GetVersionInfoRequest = ns4__GetVersionInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getVersionInfoRequest(soap, &soap_tmp___ns1__getVersionInfoRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getVersionInfoRequest(soap, &soap_tmp___ns1__getVersionInfoRequest, "-ns1:getVersionInfoRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getVersionInfoRequest(soap, &soap_tmp___ns1__getVersionInfoRequest, "-ns1:getVersionInfoRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetVersionInfoResponse)
		return soap_closesock(soap);
	ns4__GetVersionInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetVersionInfoResponse->soap_get(soap, "ns4:GetVersionInfoResponse", "ns4:getVersionInfoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getWhiteBlackListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__getWhiteBlackListRequest *ns4__GetWhiteBlackListRequest, ns4__getWhiteBlackListResponse *ns4__GetWhiteBlackListResponse)
{	struct __ns1__getWhiteBlackListRequest soap_tmp___ns1__getWhiteBlackListRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GetWhiteBlackList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getWhiteBlackListRequest.ns4__GetWhiteBlackListRequest = ns4__GetWhiteBlackListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getWhiteBlackListRequest(soap, &soap_tmp___ns1__getWhiteBlackListRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getWhiteBlackListRequest(soap, &soap_tmp___ns1__getWhiteBlackListRequest, "-ns1:getWhiteBlackListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getWhiteBlackListRequest(soap, &soap_tmp___ns1__getWhiteBlackListRequest, "-ns1:getWhiteBlackListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GetWhiteBlackListResponse)
		return soap_closesock(soap);
	ns4__GetWhiteBlackListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GetWhiteBlackListResponse->soap_get(soap, "ns4:GetWhiteBlackListResponse", "ns4:getWhiteBlackListResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__grantRightsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__grantRightsRequest *ns4__GrantRightsRequest, ns4__grantRightsResponse *ns4__GrantRightsResponse)
{	struct __ns1__grantRightsRequest soap_tmp___ns1__grantRightsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/GrantRights";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__grantRightsRequest.ns4__GrantRightsRequest = ns4__GrantRightsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__grantRightsRequest(soap, &soap_tmp___ns1__grantRightsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__grantRightsRequest(soap, &soap_tmp___ns1__grantRightsRequest, "-ns1:grantRightsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__grantRightsRequest(soap, &soap_tmp___ns1__grantRightsRequest, "-ns1:grantRightsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__GrantRightsResponse)
		return soap_closesock(soap);
	ns4__GrantRightsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__GrantRightsResponse->soap_get(soap, "ns4:GrantRightsResponse", "ns4:grantRightsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyIdentityRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__modifyIdentityRequest *ns4__ModifyIdentityRequest, ns4__modifyIdentityResponse *ns4__ModifyIdentityResponse)
{	struct __ns1__modifyIdentityRequest soap_tmp___ns1__modifyIdentityRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/ModifyIdentity";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyIdentityRequest.ns4__ModifyIdentityRequest = ns4__ModifyIdentityRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyIdentityRequest(soap, &soap_tmp___ns1__modifyIdentityRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyIdentityRequest(soap, &soap_tmp___ns1__modifyIdentityRequest, "-ns1:modifyIdentityRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyIdentityRequest(soap, &soap_tmp___ns1__modifyIdentityRequest, "-ns1:modifyIdentityRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__ModifyIdentityResponse)
		return soap_closesock(soap);
	ns4__ModifyIdentityResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ModifyIdentityResponse->soap_get(soap, "ns4:ModifyIdentityResponse", "ns4:modifyIdentityResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyPrefsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__modifyPrefsRequest *ns4__ModifyPrefsRequest, ns4__modifyPrefsResponse *ns4__ModifyPrefsResponse)
{	struct __ns1__modifyPrefsRequest soap_tmp___ns1__modifyPrefsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/ModifyPrefs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyPrefsRequest.ns4__ModifyPrefsRequest = ns4__ModifyPrefsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyPrefsRequest(soap, &soap_tmp___ns1__modifyPrefsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyPrefsRequest(soap, &soap_tmp___ns1__modifyPrefsRequest, "-ns1:modifyPrefsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyPrefsRequest(soap, &soap_tmp___ns1__modifyPrefsRequest, "-ns1:modifyPrefsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__ModifyPrefsResponse)
		return soap_closesock(soap);
	ns4__ModifyPrefsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ModifyPrefsResponse->soap_get(soap, "ns4:ModifyPrefsResponse", "ns4:modifyPrefsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyPropertiesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__modifyPropertiesRequest *ns4__ModifyPropertiesRequest, ns4__modifyPropertiesResponse *ns4__ModifyPropertiesResponse)
{	struct __ns1__modifyPropertiesRequest soap_tmp___ns1__modifyPropertiesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/ModifyProperties";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyPropertiesRequest.ns4__ModifyPropertiesRequest = ns4__ModifyPropertiesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyPropertiesRequest(soap, &soap_tmp___ns1__modifyPropertiesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyPropertiesRequest(soap, &soap_tmp___ns1__modifyPropertiesRequest, "-ns1:modifyPropertiesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyPropertiesRequest(soap, &soap_tmp___ns1__modifyPropertiesRequest, "-ns1:modifyPropertiesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__ModifyPropertiesResponse)
		return soap_closesock(soap);
	ns4__ModifyPropertiesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ModifyPropertiesResponse->soap_get(soap, "ns4:ModifyPropertiesResponse", "ns4:modifyPropertiesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifySignatureRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__modifySignatureRequest *ns4__ModifySignatureRequest, ns4__modifySignatureResponse *ns4__ModifySignatureResponse)
{	struct __ns1__modifySignatureRequest soap_tmp___ns1__modifySignatureRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/ModifySignature";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifySignatureRequest.ns4__ModifySignatureRequest = ns4__ModifySignatureRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifySignatureRequest(soap, &soap_tmp___ns1__modifySignatureRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifySignatureRequest(soap, &soap_tmp___ns1__modifySignatureRequest, "-ns1:modifySignatureRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifySignatureRequest(soap, &soap_tmp___ns1__modifySignatureRequest, "-ns1:modifySignatureRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__ModifySignatureResponse)
		return soap_closesock(soap);
	ns4__ModifySignatureResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ModifySignatureResponse->soap_get(soap, "ns4:ModifySignatureResponse", "ns4:modifySignatureResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyWhiteBlackListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__modifyWhiteBlackListRequest *ns4__ModifyWhiteBlackListRequest, ns4__modifyWhiteBlackListResponse *ns4__ModifyWhiteBlackListResponse)
{	struct __ns1__modifyWhiteBlackListRequest soap_tmp___ns1__modifyWhiteBlackListRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/ModifyWhiteBlackList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyWhiteBlackListRequest.ns4__ModifyWhiteBlackListRequest = ns4__ModifyWhiteBlackListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyWhiteBlackListRequest(soap, &soap_tmp___ns1__modifyWhiteBlackListRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyWhiteBlackListRequest(soap, &soap_tmp___ns1__modifyWhiteBlackListRequest, "-ns1:modifyWhiteBlackListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyWhiteBlackListRequest(soap, &soap_tmp___ns1__modifyWhiteBlackListRequest, "-ns1:modifyWhiteBlackListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__ModifyWhiteBlackListResponse)
		return soap_closesock(soap);
	ns4__ModifyWhiteBlackListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ModifyWhiteBlackListResponse->soap_get(soap, "ns4:ModifyWhiteBlackListResponse", "ns4:modifyWhiteBlackListResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyZimletPrefsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__modifyZimletPrefsRequest *ns4__ModifyZimletPrefsRequest, ns4__modifyZimletPrefsResponse *ns4__ModifyZimletPrefsResponse)
{	struct __ns1__modifyZimletPrefsRequest soap_tmp___ns1__modifyZimletPrefsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/ModifyZimletPrefs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyZimletPrefsRequest.ns4__ModifyZimletPrefsRequest = ns4__ModifyZimletPrefsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyZimletPrefsRequest(soap, &soap_tmp___ns1__modifyZimletPrefsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyZimletPrefsRequest(soap, &soap_tmp___ns1__modifyZimletPrefsRequest, "-ns1:modifyZimletPrefsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyZimletPrefsRequest(soap, &soap_tmp___ns1__modifyZimletPrefsRequest, "-ns1:modifyZimletPrefsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__ModifyZimletPrefsResponse)
		return soap_closesock(soap);
	ns4__ModifyZimletPrefsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__ModifyZimletPrefsResponse->soap_get(soap, "ns4:ModifyZimletPrefsResponse", "ns4:modifyZimletPrefsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__revokeRightsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__revokeRightsRequest *ns4__RevokeRightsRequest, ns4__revokeRightsResponse *ns4__RevokeRightsResponse)
{	struct __ns1__revokeRightsRequest soap_tmp___ns1__revokeRightsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/RevokeRights";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__revokeRightsRequest.ns4__RevokeRightsRequest = ns4__RevokeRightsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__revokeRightsRequest(soap, &soap_tmp___ns1__revokeRightsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__revokeRightsRequest(soap, &soap_tmp___ns1__revokeRightsRequest, "-ns1:revokeRightsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__revokeRightsRequest(soap, &soap_tmp___ns1__revokeRightsRequest, "-ns1:revokeRightsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__RevokeRightsResponse)
		return soap_closesock(soap);
	ns4__RevokeRightsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__RevokeRightsResponse->soap_get(soap, "ns4:RevokeRightsResponse", "ns4:revokeRightsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__searchCalendarResourcesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__searchCalendarResourcesRequest *ns4__SearchCalendarResourcesRequest, ns4__searchCalendarResourcesResponse *ns4__SearchCalendarResourcesResponse)
{	struct __ns1__searchCalendarResourcesRequest soap_tmp___ns1__searchCalendarResourcesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/SearchCalendarResources";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__searchCalendarResourcesRequest.ns4__SearchCalendarResourcesRequest = ns4__SearchCalendarResourcesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__searchCalendarResourcesRequest(soap, &soap_tmp___ns1__searchCalendarResourcesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__searchCalendarResourcesRequest(soap, &soap_tmp___ns1__searchCalendarResourcesRequest, "-ns1:searchCalendarResourcesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__searchCalendarResourcesRequest(soap, &soap_tmp___ns1__searchCalendarResourcesRequest, "-ns1:searchCalendarResourcesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__SearchCalendarResourcesResponse)
		return soap_closesock(soap);
	ns4__SearchCalendarResourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__SearchCalendarResourcesResponse->soap_get(soap, "ns4:SearchCalendarResourcesResponse", "ns4:searchCalendarResourcesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__searchGalRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__searchGalRequest *ns4__SearchGalRequest, ns4__searchGalResponse *ns4__SearchGalResponse)
{	struct __ns1__searchGalRequest soap_tmp___ns1__searchGalRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/SearchGal";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__searchGalRequest.ns4__SearchGalRequest = ns4__SearchGalRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__searchGalRequest(soap, &soap_tmp___ns1__searchGalRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__searchGalRequest(soap, &soap_tmp___ns1__searchGalRequest, "-ns1:searchGalRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__searchGalRequest(soap, &soap_tmp___ns1__searchGalRequest, "-ns1:searchGalRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__SearchGalResponse)
		return soap_closesock(soap);
	ns4__SearchGalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__SearchGalResponse->soap_get(soap, "ns4:SearchGalResponse", "ns4:searchGalResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__subscribeDistributionListRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__subscribeDistributionListRequest *ns4__SubscribeDistributionListRequest, ns4__subscribeDistributionListResponse *ns4__SubscribeDistributionListResponse)
{	struct __ns1__subscribeDistributionListRequest soap_tmp___ns1__subscribeDistributionListRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/SubscribeDistributionList";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__subscribeDistributionListRequest.ns4__SubscribeDistributionListRequest = ns4__SubscribeDistributionListRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__subscribeDistributionListRequest(soap, &soap_tmp___ns1__subscribeDistributionListRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__subscribeDistributionListRequest(soap, &soap_tmp___ns1__subscribeDistributionListRequest, "-ns1:subscribeDistributionListRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__subscribeDistributionListRequest(soap, &soap_tmp___ns1__subscribeDistributionListRequest, "-ns1:subscribeDistributionListRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__SubscribeDistributionListResponse)
		return soap_closesock(soap);
	ns4__SubscribeDistributionListResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__SubscribeDistributionListResponse->soap_get(soap, "ns4:SubscribeDistributionListResponse", "ns4:subscribeDistributionListResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__syncGalRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns4__syncGalRequest *ns4__SyncGalRequest, ns4__syncGalResponse *ns4__SyncGalResponse)
{	struct __ns1__syncGalRequest soap_tmp___ns1__syncGalRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraAccount/SyncGal";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__syncGalRequest.ns4__SyncGalRequest = ns4__SyncGalRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__syncGalRequest(soap, &soap_tmp___ns1__syncGalRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__syncGalRequest(soap, &soap_tmp___ns1__syncGalRequest, "-ns1:syncGalRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__syncGalRequest(soap, &soap_tmp___ns1__syncGalRequest, "-ns1:syncGalRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns4__SyncGalResponse)
		return soap_closesock(soap);
	ns4__SyncGalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns4__SyncGalResponse->soap_get(soap, "ns4:SyncGalResponse", "ns4:syncGalResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addAppointmentInviteRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__addAppointmentInviteRequest *ns5__AddAppointmentInviteRequest, ns5__addAppointmentInviteResponse *ns5__AddAppointmentInviteResponse)
{	struct __ns1__addAppointmentInviteRequest soap_tmp___ns1__addAppointmentInviteRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/AddAppointmentInvite";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addAppointmentInviteRequest.ns5__AddAppointmentInviteRequest = ns5__AddAppointmentInviteRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__addAppointmentInviteRequest(soap, &soap_tmp___ns1__addAppointmentInviteRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addAppointmentInviteRequest(soap, &soap_tmp___ns1__addAppointmentInviteRequest, "-ns1:addAppointmentInviteRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addAppointmentInviteRequest(soap, &soap_tmp___ns1__addAppointmentInviteRequest, "-ns1:addAppointmentInviteRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__AddAppointmentInviteResponse)
		return soap_closesock(soap);
	ns5__AddAppointmentInviteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__AddAppointmentInviteResponse->soap_get(soap, "ns5:AddAppointmentInviteResponse", "ns5:addAppointmentInviteResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addCommentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__addCommentRequest *ns5__AddCommentRequest, ns5__addCommentResponse *ns5__AddCommentResponse)
{	struct __ns1__addCommentRequest soap_tmp___ns1__addCommentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/AddComment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addCommentRequest.ns5__AddCommentRequest = ns5__AddCommentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__addCommentRequest(soap, &soap_tmp___ns1__addCommentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addCommentRequest(soap, &soap_tmp___ns1__addCommentRequest, "-ns1:addCommentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addCommentRequest(soap, &soap_tmp___ns1__addCommentRequest, "-ns1:addCommentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__AddCommentResponse)
		return soap_closesock(soap);
	ns5__AddCommentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__AddCommentResponse->soap_get(soap, "ns5:AddCommentResponse", "ns5:addCommentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addMsgRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__addMsgRequest *ns5__AddMsgRequest, ns5__addMsgResponse *ns5__AddMsgResponse)
{	struct __ns1__addMsgRequest soap_tmp___ns1__addMsgRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/AddMsg";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addMsgRequest.ns5__AddMsgRequest = ns5__AddMsgRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__addMsgRequest(soap, &soap_tmp___ns1__addMsgRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addMsgRequest(soap, &soap_tmp___ns1__addMsgRequest, "-ns1:addMsgRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addMsgRequest(soap, &soap_tmp___ns1__addMsgRequest, "-ns1:addMsgRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__AddMsgResponse)
		return soap_closesock(soap);
	ns5__AddMsgResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__AddMsgResponse->soap_get(soap, "ns5:AddMsgResponse", "ns5:addMsgResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__addTaskInviteRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__addTaskInviteRequest *ns5__AddTaskInviteRequest, ns5__addTaskInviteResponse *ns5__AddTaskInviteResponse)
{	struct __ns1__addTaskInviteRequest soap_tmp___ns1__addTaskInviteRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/AddTaskInvite";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__addTaskInviteRequest.ns5__AddTaskInviteRequest = ns5__AddTaskInviteRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__addTaskInviteRequest(soap, &soap_tmp___ns1__addTaskInviteRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__addTaskInviteRequest(soap, &soap_tmp___ns1__addTaskInviteRequest, "-ns1:addTaskInviteRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__addTaskInviteRequest(soap, &soap_tmp___ns1__addTaskInviteRequest, "-ns1:addTaskInviteRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__AddTaskInviteResponse)
		return soap_closesock(soap);
	ns5__AddTaskInviteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__AddTaskInviteResponse->soap_get(soap, "ns5:AddTaskInviteResponse", "ns5:addTaskInviteResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__announceOrganizerChangeRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__announceOrganizerChangeRequest *ns5__AnnounceOrganizerChangeRequest, ns5__announceOrganizerChangeResponse *ns5__AnnounceOrganizerChangeResponse)
{	struct __ns1__announceOrganizerChangeRequest soap_tmp___ns1__announceOrganizerChangeRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/AnnounceOrganizerChange";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__announceOrganizerChangeRequest.ns5__AnnounceOrganizerChangeRequest = ns5__AnnounceOrganizerChangeRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__announceOrganizerChangeRequest(soap, &soap_tmp___ns1__announceOrganizerChangeRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__announceOrganizerChangeRequest(soap, &soap_tmp___ns1__announceOrganizerChangeRequest, "-ns1:announceOrganizerChangeRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__announceOrganizerChangeRequest(soap, &soap_tmp___ns1__announceOrganizerChangeRequest, "-ns1:announceOrganizerChangeRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__AnnounceOrganizerChangeResponse)
		return soap_closesock(soap);
	ns5__AnnounceOrganizerChangeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__AnnounceOrganizerChangeResponse->soap_get(soap, "ns5:AnnounceOrganizerChangeResponse", "ns5:announceOrganizerChangeResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__applyFilterRulesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__applyFilterRulesRequest *ns5__ApplyFilterRulesRequest, ns5__applyFilterRulesResponse *ns5__ApplyFilterRulesResponse)
{	struct __ns1__applyFilterRulesRequest soap_tmp___ns1__applyFilterRulesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ApplyFilterRules";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__applyFilterRulesRequest.ns5__ApplyFilterRulesRequest = ns5__ApplyFilterRulesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__applyFilterRulesRequest(soap, &soap_tmp___ns1__applyFilterRulesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__applyFilterRulesRequest(soap, &soap_tmp___ns1__applyFilterRulesRequest, "-ns1:applyFilterRulesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__applyFilterRulesRequest(soap, &soap_tmp___ns1__applyFilterRulesRequest, "-ns1:applyFilterRulesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ApplyFilterRulesResponse)
		return soap_closesock(soap);
	ns5__ApplyFilterRulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ApplyFilterRulesResponse->soap_get(soap, "ns5:ApplyFilterRulesResponse", "ns5:applyFilterRulesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__applyOutgoingFilterRulesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__applyOutgoingFilterRulesRequest *ns5__ApplyOutgoingFilterRulesRequest, ns5__applyOutgoingFilterRulesResponse *ns5__ApplyOutgoingFilterRulesResponse)
{	struct __ns1__applyOutgoingFilterRulesRequest soap_tmp___ns1__applyOutgoingFilterRulesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ApplyOutgoingFilterRules";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__applyOutgoingFilterRulesRequest.ns5__ApplyOutgoingFilterRulesRequest = ns5__ApplyOutgoingFilterRulesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__applyOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__applyOutgoingFilterRulesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__applyOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__applyOutgoingFilterRulesRequest, "-ns1:applyOutgoingFilterRulesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__applyOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__applyOutgoingFilterRulesRequest, "-ns1:applyOutgoingFilterRulesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ApplyOutgoingFilterRulesResponse)
		return soap_closesock(soap);
	ns5__ApplyOutgoingFilterRulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ApplyOutgoingFilterRulesResponse->soap_get(soap, "ns5:ApplyOutgoingFilterRulesResponse", "ns5:applyOutgoingFilterRulesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__autoCompleteRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__autoCompleteRequest *ns5__AutoCompleteRequest, ns5__autoCompleteResponse *ns5__AutoCompleteResponse)
{	struct __ns1__autoCompleteRequest soap_tmp___ns1__autoCompleteRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/AutoComplete";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__autoCompleteRequest.ns5__AutoCompleteRequest = ns5__AutoCompleteRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__autoCompleteRequest(soap, &soap_tmp___ns1__autoCompleteRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__autoCompleteRequest(soap, &soap_tmp___ns1__autoCompleteRequest, "-ns1:autoCompleteRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__autoCompleteRequest(soap, &soap_tmp___ns1__autoCompleteRequest, "-ns1:autoCompleteRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__AutoCompleteResponse)
		return soap_closesock(soap);
	ns5__AutoCompleteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__AutoCompleteResponse->soap_get(soap, "ns5:AutoCompleteResponse", "ns5:autoCompleteResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__bounceMsgRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__bounceMsgRequest *ns5__BounceMsgRequest, ns5__bounceMsgResponse *ns5__BounceMsgResponse)
{	struct __ns1__bounceMsgRequest soap_tmp___ns1__bounceMsgRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/BounceMsg";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__bounceMsgRequest.ns5__BounceMsgRequest = ns5__BounceMsgRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__bounceMsgRequest(soap, &soap_tmp___ns1__bounceMsgRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__bounceMsgRequest(soap, &soap_tmp___ns1__bounceMsgRequest, "-ns1:bounceMsgRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__bounceMsgRequest(soap, &soap_tmp___ns1__bounceMsgRequest, "-ns1:bounceMsgRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__BounceMsgResponse)
		return soap_closesock(soap);
	ns5__BounceMsgResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__BounceMsgResponse->soap_get(soap, "ns5:BounceMsgResponse", "ns5:bounceMsgResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__browseRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__browseRequest *ns5__BrowseRequest, ns5__browseResponse *ns5__BrowseResponse)
{	struct __ns1__browseRequest soap_tmp___ns1__browseRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/Browse";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__browseRequest.ns5__BrowseRequest = ns5__BrowseRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__browseRequest(soap, &soap_tmp___ns1__browseRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__browseRequest(soap, &soap_tmp___ns1__browseRequest, "-ns1:browseRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__browseRequest(soap, &soap_tmp___ns1__browseRequest, "-ns1:browseRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__BrowseResponse)
		return soap_closesock(soap);
	ns5__BrowseResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__BrowseResponse->soap_get(soap, "ns5:BrowseResponse", "ns5:browseResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__cancelAppointmentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__cancelAppointmentRequest *ns5__CancelAppointmentRequest, ns5__cancelAppointmentResponse *ns5__CancelAppointmentResponse)
{	struct __ns1__cancelAppointmentRequest soap_tmp___ns1__cancelAppointmentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CancelAppointment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cancelAppointmentRequest.ns5__CancelAppointmentRequest = ns5__CancelAppointmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__cancelAppointmentRequest(soap, &soap_tmp___ns1__cancelAppointmentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cancelAppointmentRequest(soap, &soap_tmp___ns1__cancelAppointmentRequest, "-ns1:cancelAppointmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cancelAppointmentRequest(soap, &soap_tmp___ns1__cancelAppointmentRequest, "-ns1:cancelAppointmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CancelAppointmentResponse)
		return soap_closesock(soap);
	ns5__CancelAppointmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CancelAppointmentResponse->soap_get(soap, "ns5:CancelAppointmentResponse", "ns5:cancelAppointmentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__cancelTaskRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__cancelTaskRequest *ns5__CancelTaskRequest, ns5__cancelTaskResponse *ns5__CancelTaskResponse)
{	struct __ns1__cancelTaskRequest soap_tmp___ns1__cancelTaskRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CancelTask";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cancelTaskRequest.ns5__CancelTaskRequest = ns5__CancelTaskRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__cancelTaskRequest(soap, &soap_tmp___ns1__cancelTaskRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cancelTaskRequest(soap, &soap_tmp___ns1__cancelTaskRequest, "-ns1:cancelTaskRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cancelTaskRequest(soap, &soap_tmp___ns1__cancelTaskRequest, "-ns1:cancelTaskRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CancelTaskResponse)
		return soap_closesock(soap);
	ns5__CancelTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CancelTaskResponse->soap_get(soap, "ns5:CancelTaskResponse", "ns5:cancelTaskResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkDeviceStatusRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__checkDeviceStatusRequest *ns5__CheckDeviceStatusRequest, ns5__checkDeviceStatusResponse *ns5__CheckDeviceStatusResponse)
{	struct __ns1__checkDeviceStatusRequest soap_tmp___ns1__checkDeviceStatusRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CheckDeviceStatus";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__checkDeviceStatusRequest.ns5__CheckDeviceStatusRequest = ns5__CheckDeviceStatusRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__checkDeviceStatusRequest(soap, &soap_tmp___ns1__checkDeviceStatusRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkDeviceStatusRequest(soap, &soap_tmp___ns1__checkDeviceStatusRequest, "-ns1:checkDeviceStatusRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkDeviceStatusRequest(soap, &soap_tmp___ns1__checkDeviceStatusRequest, "-ns1:checkDeviceStatusRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CheckDeviceStatusResponse)
		return soap_closesock(soap);
	ns5__CheckDeviceStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CheckDeviceStatusResponse->soap_get(soap, "ns5:CheckDeviceStatusResponse", "ns5:checkDeviceStatusResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkPermissionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__checkPermissionRequest *ns5__CheckPermissionRequest, ns5__checkPermissionResponse *ns5__CheckPermissionResponse)
{	struct __ns1__checkPermissionRequest soap_tmp___ns1__checkPermissionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CheckPermission";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__checkPermissionRequest.ns5__CheckPermissionRequest = ns5__CheckPermissionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__checkPermissionRequest(soap, &soap_tmp___ns1__checkPermissionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkPermissionRequest(soap, &soap_tmp___ns1__checkPermissionRequest, "-ns1:checkPermissionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkPermissionRequest(soap, &soap_tmp___ns1__checkPermissionRequest, "-ns1:checkPermissionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CheckPermissionResponse)
		return soap_closesock(soap);
	ns5__CheckPermissionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CheckPermissionResponse->soap_get(soap, "ns5:CheckPermissionResponse", "ns5:checkPermissionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkRecurConflictsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__checkRecurConflictsRequest *ns5__CheckRecurConflictsRequest, ns5__checkRecurConflictsResponse *ns5__CheckRecurConflictsResponse)
{	struct __ns1__checkRecurConflictsRequest soap_tmp___ns1__checkRecurConflictsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CheckRecurConflicts";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__checkRecurConflictsRequest.ns5__CheckRecurConflictsRequest = ns5__CheckRecurConflictsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__checkRecurConflictsRequest(soap, &soap_tmp___ns1__checkRecurConflictsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkRecurConflictsRequest(soap, &soap_tmp___ns1__checkRecurConflictsRequest, "-ns1:checkRecurConflictsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkRecurConflictsRequest(soap, &soap_tmp___ns1__checkRecurConflictsRequest, "-ns1:checkRecurConflictsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CheckRecurConflictsResponse)
		return soap_closesock(soap);
	ns5__CheckRecurConflictsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CheckRecurConflictsResponse->soap_get(soap, "ns5:CheckRecurConflictsResponse", "ns5:checkRecurConflictsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__checkSpellingRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__checkSpellingRequest *ns5__CheckSpellingRequest, ns5__checkSpellingResponse *ns5__CheckSpellingResponse)
{	struct __ns1__checkSpellingRequest soap_tmp___ns1__checkSpellingRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CheckSpelling";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__checkSpellingRequest.ns5__CheckSpellingRequest = ns5__CheckSpellingRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__checkSpellingRequest(soap, &soap_tmp___ns1__checkSpellingRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__checkSpellingRequest(soap, &soap_tmp___ns1__checkSpellingRequest, "-ns1:checkSpellingRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__checkSpellingRequest(soap, &soap_tmp___ns1__checkSpellingRequest, "-ns1:checkSpellingRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CheckSpellingResponse)
		return soap_closesock(soap);
	ns5__CheckSpellingResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CheckSpellingResponse->soap_get(soap, "ns5:CheckSpellingResponse", "ns5:checkSpellingResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__completeTaskInstanceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__completeTaskInstanceRequest *ns5__CompleteTaskInstanceRequest, ns5__completeTaskInstanceResponse *ns5__CompleteTaskInstanceResponse)
{	struct __ns1__completeTaskInstanceRequest soap_tmp___ns1__completeTaskInstanceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CompleteTaskInstance";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__completeTaskInstanceRequest.ns5__CompleteTaskInstanceRequest = ns5__CompleteTaskInstanceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__completeTaskInstanceRequest(soap, &soap_tmp___ns1__completeTaskInstanceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__completeTaskInstanceRequest(soap, &soap_tmp___ns1__completeTaskInstanceRequest, "-ns1:completeTaskInstanceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__completeTaskInstanceRequest(soap, &soap_tmp___ns1__completeTaskInstanceRequest, "-ns1:completeTaskInstanceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CompleteTaskInstanceResponse)
		return soap_closesock(soap);
	ns5__CompleteTaskInstanceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CompleteTaskInstanceResponse->soap_get(soap, "ns5:CompleteTaskInstanceResponse", "ns5:completeTaskInstanceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__contactActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__contactActionRequest *ns5__ContactActionRequest, ns5__contactActionResponse *ns5__ContactActionResponse)
{	struct __ns1__contactActionRequest soap_tmp___ns1__contactActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ContactAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__contactActionRequest.ns5__ContactActionRequest = ns5__ContactActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__contactActionRequest(soap, &soap_tmp___ns1__contactActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__contactActionRequest(soap, &soap_tmp___ns1__contactActionRequest, "-ns1:contactActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__contactActionRequest(soap, &soap_tmp___ns1__contactActionRequest, "-ns1:contactActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ContactActionResponse)
		return soap_closesock(soap);
	ns5__ContactActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ContactActionResponse->soap_get(soap, "ns5:ContactActionResponse", "ns5:contactActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__convActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__convActionRequest *ns5__ConvActionRequest, ns5__convActionResponse *ns5__ConvActionResponse)
{	struct __ns1__convActionRequest soap_tmp___ns1__convActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ConvAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__convActionRequest.ns5__ConvActionRequest = ns5__ConvActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__convActionRequest(soap, &soap_tmp___ns1__convActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__convActionRequest(soap, &soap_tmp___ns1__convActionRequest, "-ns1:convActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__convActionRequest(soap, &soap_tmp___ns1__convActionRequest, "-ns1:convActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ConvActionResponse)
		return soap_closesock(soap);
	ns5__ConvActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ConvActionResponse->soap_get(soap, "ns5:ConvActionResponse", "ns5:convActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__counterAppointmentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__counterAppointmentRequest *ns5__CounterAppointmentRequest, ns5__counterAppointmentResponse *ns5__CounterAppointmentResponse)
{	struct __ns1__counterAppointmentRequest soap_tmp___ns1__counterAppointmentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CounterAppointment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__counterAppointmentRequest.ns5__CounterAppointmentRequest = ns5__CounterAppointmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__counterAppointmentRequest(soap, &soap_tmp___ns1__counterAppointmentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__counterAppointmentRequest(soap, &soap_tmp___ns1__counterAppointmentRequest, "-ns1:counterAppointmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__counterAppointmentRequest(soap, &soap_tmp___ns1__counterAppointmentRequest, "-ns1:counterAppointmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CounterAppointmentResponse)
		return soap_closesock(soap);
	ns5__CounterAppointmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CounterAppointmentResponse->soap_get(soap, "ns5:CounterAppointmentResponse", "ns5:counterAppointmentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createAppointmentExceptionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createAppointmentExceptionRequest *ns5__CreateAppointmentExceptionRequest, ns5__createAppointmentExceptionResponse *ns5__CreateAppointmentExceptionResponse)
{	struct __ns1__createAppointmentExceptionRequest soap_tmp___ns1__createAppointmentExceptionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateAppointmentException";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createAppointmentExceptionRequest.ns5__CreateAppointmentExceptionRequest = ns5__CreateAppointmentExceptionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createAppointmentExceptionRequest(soap, &soap_tmp___ns1__createAppointmentExceptionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createAppointmentExceptionRequest(soap, &soap_tmp___ns1__createAppointmentExceptionRequest, "-ns1:createAppointmentExceptionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createAppointmentExceptionRequest(soap, &soap_tmp___ns1__createAppointmentExceptionRequest, "-ns1:createAppointmentExceptionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateAppointmentExceptionResponse)
		return soap_closesock(soap);
	ns5__CreateAppointmentExceptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateAppointmentExceptionResponse->soap_get(soap, "ns5:CreateAppointmentExceptionResponse", "ns5:createAppointmentExceptionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createAppointmentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createAppointmentRequest *ns5__CreateAppointmentRequest, ns5__createAppointmentResponse *ns5__CreateAppointmentResponse)
{	struct __ns1__createAppointmentRequest soap_tmp___ns1__createAppointmentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateAppointment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createAppointmentRequest.ns5__CreateAppointmentRequest = ns5__CreateAppointmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createAppointmentRequest(soap, &soap_tmp___ns1__createAppointmentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createAppointmentRequest(soap, &soap_tmp___ns1__createAppointmentRequest, "-ns1:createAppointmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createAppointmentRequest(soap, &soap_tmp___ns1__createAppointmentRequest, "-ns1:createAppointmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateAppointmentResponse)
		return soap_closesock(soap);
	ns5__CreateAppointmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateAppointmentResponse->soap_get(soap, "ns5:CreateAppointmentResponse", "ns5:createAppointmentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createContactRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createContactRequest *ns5__CreateContactRequest, ns5__createContactResponse *ns5__CreateContactResponse)
{	struct __ns1__createContactRequest soap_tmp___ns1__createContactRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateContact";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createContactRequest.ns5__CreateContactRequest = ns5__CreateContactRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createContactRequest(soap, &soap_tmp___ns1__createContactRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createContactRequest(soap, &soap_tmp___ns1__createContactRequest, "-ns1:createContactRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createContactRequest(soap, &soap_tmp___ns1__createContactRequest, "-ns1:createContactRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateContactResponse)
		return soap_closesock(soap);
	ns5__CreateContactResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateContactResponse->soap_get(soap, "ns5:CreateContactResponse", "ns5:createContactResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createDataSourceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createDataSourceRequest *ns5__CreateDataSourceRequest, ns5__createDataSourceResponse *ns5__CreateDataSourceResponse)
{	struct __ns1__createDataSourceRequest soap_tmp___ns1__createDataSourceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateDataSource";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createDataSourceRequest.ns5__CreateDataSourceRequest = ns5__CreateDataSourceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createDataSourceRequest(soap, &soap_tmp___ns1__createDataSourceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createDataSourceRequest(soap, &soap_tmp___ns1__createDataSourceRequest, "-ns1:createDataSourceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createDataSourceRequest(soap, &soap_tmp___ns1__createDataSourceRequest, "-ns1:createDataSourceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateDataSourceResponse)
		return soap_closesock(soap);
	ns5__CreateDataSourceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateDataSourceResponse->soap_get(soap, "ns5:CreateDataSourceResponse", "ns5:createDataSourceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createFolderRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createFolderRequest *ns5__CreateFolderRequest, ns5__createFolderResponse *ns5__CreateFolderResponse)
{	struct __ns1__createFolderRequest soap_tmp___ns1__createFolderRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateFolder";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createFolderRequest.ns5__CreateFolderRequest = ns5__CreateFolderRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createFolderRequest(soap, &soap_tmp___ns1__createFolderRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createFolderRequest(soap, &soap_tmp___ns1__createFolderRequest, "-ns1:createFolderRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createFolderRequest(soap, &soap_tmp___ns1__createFolderRequest, "-ns1:createFolderRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateFolderResponse)
		return soap_closesock(soap);
	ns5__CreateFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateFolderResponse->soap_get(soap, "ns5:CreateFolderResponse", "ns5:createFolderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createMountpointRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createMountpointRequest *ns5__CreateMountpointRequest, ns5__createMountpointResponse *ns5__CreateMountpointResponse)
{	struct __ns1__createMountpointRequest soap_tmp___ns1__createMountpointRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateMountpoint";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createMountpointRequest.ns5__CreateMountpointRequest = ns5__CreateMountpointRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createMountpointRequest(soap, &soap_tmp___ns1__createMountpointRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createMountpointRequest(soap, &soap_tmp___ns1__createMountpointRequest, "-ns1:createMountpointRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createMountpointRequest(soap, &soap_tmp___ns1__createMountpointRequest, "-ns1:createMountpointRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateMountpointResponse)
		return soap_closesock(soap);
	ns5__CreateMountpointResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateMountpointResponse->soap_get(soap, "ns5:CreateMountpointResponse", "ns5:createMountpointResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createNoteRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createNoteRequest *ns5__CreateNoteRequest, ns5__createNoteResponse *ns5__CreateNoteResponse)
{	struct __ns1__createNoteRequest soap_tmp___ns1__createNoteRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateNote";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createNoteRequest.ns5__CreateNoteRequest = ns5__CreateNoteRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createNoteRequest(soap, &soap_tmp___ns1__createNoteRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createNoteRequest(soap, &soap_tmp___ns1__createNoteRequest, "-ns1:createNoteRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createNoteRequest(soap, &soap_tmp___ns1__createNoteRequest, "-ns1:createNoteRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateNoteResponse)
		return soap_closesock(soap);
	ns5__CreateNoteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateNoteResponse->soap_get(soap, "ns5:CreateNoteResponse", "ns5:createNoteResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createSearchFolderRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createSearchFolderRequest *ns5__CreateSearchFolderRequest, ns5__createSearchFolderResponse *ns5__CreateSearchFolderResponse)
{	struct __ns1__createSearchFolderRequest soap_tmp___ns1__createSearchFolderRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateSearchFolder";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createSearchFolderRequest.ns5__CreateSearchFolderRequest = ns5__CreateSearchFolderRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createSearchFolderRequest(soap, &soap_tmp___ns1__createSearchFolderRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createSearchFolderRequest(soap, &soap_tmp___ns1__createSearchFolderRequest, "-ns1:createSearchFolderRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createSearchFolderRequest(soap, &soap_tmp___ns1__createSearchFolderRequest, "-ns1:createSearchFolderRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateSearchFolderResponse)
		return soap_closesock(soap);
	ns5__CreateSearchFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateSearchFolderResponse->soap_get(soap, "ns5:CreateSearchFolderResponse", "ns5:createSearchFolderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createTagRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createTagRequest *ns5__CreateTagRequest, ns5__createTagResponse *ns5__CreateTagResponse)
{	struct __ns1__createTagRequest soap_tmp___ns1__createTagRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateTag";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createTagRequest.ns5__CreateTagRequest = ns5__CreateTagRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createTagRequest(soap, &soap_tmp___ns1__createTagRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createTagRequest(soap, &soap_tmp___ns1__createTagRequest, "-ns1:createTagRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createTagRequest(soap, &soap_tmp___ns1__createTagRequest, "-ns1:createTagRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateTagResponse)
		return soap_closesock(soap);
	ns5__CreateTagResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateTagResponse->soap_get(soap, "ns5:CreateTagResponse", "ns5:createTagResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createTaskExceptionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createTaskExceptionRequest *ns5__CreateTaskExceptionRequest, ns5__createTaskExceptionResponse *ns5__CreateTaskExceptionResponse)
{	struct __ns1__createTaskExceptionRequest soap_tmp___ns1__createTaskExceptionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateTaskException";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createTaskExceptionRequest.ns5__CreateTaskExceptionRequest = ns5__CreateTaskExceptionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createTaskExceptionRequest(soap, &soap_tmp___ns1__createTaskExceptionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createTaskExceptionRequest(soap, &soap_tmp___ns1__createTaskExceptionRequest, "-ns1:createTaskExceptionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createTaskExceptionRequest(soap, &soap_tmp___ns1__createTaskExceptionRequest, "-ns1:createTaskExceptionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateTaskExceptionResponse)
		return soap_closesock(soap);
	ns5__CreateTaskExceptionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateTaskExceptionResponse->soap_get(soap, "ns5:CreateTaskExceptionResponse", "ns5:createTaskExceptionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createTaskRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createTaskRequest *ns5__CreateTaskRequest, ns5__createTaskResponse *ns5__CreateTaskResponse)
{	struct __ns1__createTaskRequest soap_tmp___ns1__createTaskRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateTask";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createTaskRequest.ns5__CreateTaskRequest = ns5__CreateTaskRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createTaskRequest(soap, &soap_tmp___ns1__createTaskRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createTaskRequest(soap, &soap_tmp___ns1__createTaskRequest, "-ns1:createTaskRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createTaskRequest(soap, &soap_tmp___ns1__createTaskRequest, "-ns1:createTaskRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateTaskResponse)
		return soap_closesock(soap);
	ns5__CreateTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateTaskResponse->soap_get(soap, "ns5:CreateTaskResponse", "ns5:createTaskResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__createWaitSetRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__createWaitSetRequest *ns5__CreateWaitSetRequest, ns5__createWaitSetResponse *ns5__CreateWaitSetResponse)
{	struct __ns1__createWaitSetRequest soap_tmp___ns1__createWaitSetRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/CreateWaitSet";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__createWaitSetRequest.ns5__CreateWaitSetRequest = ns5__CreateWaitSetRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__createWaitSetRequest(soap, &soap_tmp___ns1__createWaitSetRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__createWaitSetRequest(soap, &soap_tmp___ns1__createWaitSetRequest, "-ns1:createWaitSetRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__createWaitSetRequest(soap, &soap_tmp___ns1__createWaitSetRequest, "-ns1:createWaitSetRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__CreateWaitSetResponse)
		return soap_closesock(soap);
	ns5__CreateWaitSetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__CreateWaitSetResponse->soap_get(soap, "ns5:CreateWaitSetResponse", "ns5:createWaitSetResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__declineCounterAppointmentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__declineCounterAppointmentRequest *ns5__DeclineCounterAppointmentRequest, ns5__declineCounterAppointmentResponse *ns5__DeclineCounterAppointmentResponse)
{	struct __ns1__declineCounterAppointmentRequest soap_tmp___ns1__declineCounterAppointmentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/DeclineCounterAppointment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__declineCounterAppointmentRequest.ns5__DeclineCounterAppointmentRequest = ns5__DeclineCounterAppointmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__declineCounterAppointmentRequest(soap, &soap_tmp___ns1__declineCounterAppointmentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__declineCounterAppointmentRequest(soap, &soap_tmp___ns1__declineCounterAppointmentRequest, "-ns1:declineCounterAppointmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__declineCounterAppointmentRequest(soap, &soap_tmp___ns1__declineCounterAppointmentRequest, "-ns1:declineCounterAppointmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeclineCounterAppointmentResponse)
		return soap_closesock(soap);
	ns5__DeclineCounterAppointmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeclineCounterAppointmentResponse->soap_get(soap, "ns5:DeclineCounterAppointmentResponse", "ns5:declineCounterAppointmentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteDataSourceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__deleteDataSourceRequest *ns5__DeleteDataSourceRequest, ns5__deleteDataSourceResponse *ns5__DeleteDataSourceResponse)
{	struct __ns1__deleteDataSourceRequest soap_tmp___ns1__deleteDataSourceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/DeleteDataSource";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__deleteDataSourceRequest.ns5__DeleteDataSourceRequest = ns5__DeleteDataSourceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteDataSourceRequest(soap, &soap_tmp___ns1__deleteDataSourceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteDataSourceRequest(soap, &soap_tmp___ns1__deleteDataSourceRequest, "-ns1:deleteDataSourceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteDataSourceRequest(soap, &soap_tmp___ns1__deleteDataSourceRequest, "-ns1:deleteDataSourceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeleteDataSourceResponse)
		return soap_closesock(soap);
	ns5__DeleteDataSourceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteDataSourceResponse->soap_get(soap, "ns5:DeleteDataSourceResponse", "ns5:deleteDataSourceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__deleteDeviceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__deleteDeviceRequest *ns5__DeleteDeviceRequest, ns5__deleteDeviceResponse *ns5__DeleteDeviceResponse)
{	struct __ns1__deleteDeviceRequest soap_tmp___ns1__deleteDeviceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/DeleteDevice";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__deleteDeviceRequest.ns5__DeleteDeviceRequest = ns5__DeleteDeviceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__deleteDeviceRequest(soap, &soap_tmp___ns1__deleteDeviceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__deleteDeviceRequest(soap, &soap_tmp___ns1__deleteDeviceRequest, "-ns1:deleteDeviceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__deleteDeviceRequest(soap, &soap_tmp___ns1__deleteDeviceRequest, "-ns1:deleteDeviceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DeleteDeviceResponse)
		return soap_closesock(soap);
	ns5__DeleteDeviceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DeleteDeviceResponse->soap_get(soap, "ns5:DeleteDeviceResponse", "ns5:deleteDeviceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__destroyWaitSetRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__destroyWaitSetRequest *ns5__DestroyWaitSetRequest, ns5__destroyWaitSetResponse *ns5__DestroyWaitSetResponse)
{	struct __ns1__destroyWaitSetRequest soap_tmp___ns1__destroyWaitSetRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/DestroyWaitSet";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__destroyWaitSetRequest.ns5__DestroyWaitSetRequest = ns5__DestroyWaitSetRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__destroyWaitSetRequest(soap, &soap_tmp___ns1__destroyWaitSetRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__destroyWaitSetRequest(soap, &soap_tmp___ns1__destroyWaitSetRequest, "-ns1:destroyWaitSetRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__destroyWaitSetRequest(soap, &soap_tmp___ns1__destroyWaitSetRequest, "-ns1:destroyWaitSetRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DestroyWaitSetResponse)
		return soap_closesock(soap);
	ns5__DestroyWaitSetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DestroyWaitSetResponse->soap_get(soap, "ns5:DestroyWaitSetResponse", "ns5:destroyWaitSetResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__diffDocumentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__diffDocumentRequest *ns5__DiffDocumentRequest, ns5__diffDocumentResponse *ns5__DiffDocumentResponse)
{	struct __ns1__diffDocumentRequest soap_tmp___ns1__diffDocumentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/DiffDocument";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__diffDocumentRequest.ns5__DiffDocumentRequest = ns5__DiffDocumentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__diffDocumentRequest(soap, &soap_tmp___ns1__diffDocumentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__diffDocumentRequest(soap, &soap_tmp___ns1__diffDocumentRequest, "-ns1:diffDocumentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__diffDocumentRequest(soap, &soap_tmp___ns1__diffDocumentRequest, "-ns1:diffDocumentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DiffDocumentResponse)
		return soap_closesock(soap);
	ns5__DiffDocumentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DiffDocumentResponse->soap_get(soap, "ns5:DiffDocumentResponse", "ns5:diffDocumentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__dismissCalendarItemAlarmRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__dismissCalendarItemAlarmRequest *ns5__DismissCalendarItemAlarmRequest, ns5__dismissCalendarItemAlarmResponse *ns5__DismissCalendarItemAlarmResponse)
{	struct __ns1__dismissCalendarItemAlarmRequest soap_tmp___ns1__dismissCalendarItemAlarmRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/DismissCalendarItemAlarm";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__dismissCalendarItemAlarmRequest.ns5__DismissCalendarItemAlarmRequest = ns5__DismissCalendarItemAlarmRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__dismissCalendarItemAlarmRequest(soap, &soap_tmp___ns1__dismissCalendarItemAlarmRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__dismissCalendarItemAlarmRequest(soap, &soap_tmp___ns1__dismissCalendarItemAlarmRequest, "-ns1:dismissCalendarItemAlarmRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__dismissCalendarItemAlarmRequest(soap, &soap_tmp___ns1__dismissCalendarItemAlarmRequest, "-ns1:dismissCalendarItemAlarmRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DismissCalendarItemAlarmResponse)
		return soap_closesock(soap);
	ns5__DismissCalendarItemAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DismissCalendarItemAlarmResponse->soap_get(soap, "ns5:DismissCalendarItemAlarmResponse", "ns5:dismissCalendarItemAlarmResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__documentActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__documentActionRequest *ns5__DocumentActionRequest, ns5__documentActionResponse *ns5__DocumentActionResponse)
{	struct __ns1__documentActionRequest soap_tmp___ns1__documentActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/DocumentAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__documentActionRequest.ns5__DocumentActionRequest = ns5__DocumentActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__documentActionRequest(soap, &soap_tmp___ns1__documentActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__documentActionRequest(soap, &soap_tmp___ns1__documentActionRequest, "-ns1:documentActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__documentActionRequest(soap, &soap_tmp___ns1__documentActionRequest, "-ns1:documentActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__DocumentActionResponse)
		return soap_closesock(soap);
	ns5__DocumentActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__DocumentActionResponse->soap_get(soap, "ns5:DocumentActionResponse", "ns5:documentActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__emptyDumpsterRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__emptyDumpsterRequest *ns5__EmptyDumpsterRequest, ns5__emptyDumpsterResponse *ns5__EmptyDumpsterResponse)
{	struct __ns1__emptyDumpsterRequest soap_tmp___ns1__emptyDumpsterRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/EmptyDumpster";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__emptyDumpsterRequest.ns5__EmptyDumpsterRequest = ns5__EmptyDumpsterRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__emptyDumpsterRequest(soap, &soap_tmp___ns1__emptyDumpsterRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__emptyDumpsterRequest(soap, &soap_tmp___ns1__emptyDumpsterRequest, "-ns1:emptyDumpsterRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__emptyDumpsterRequest(soap, &soap_tmp___ns1__emptyDumpsterRequest, "-ns1:emptyDumpsterRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__EmptyDumpsterResponse)
		return soap_closesock(soap);
	ns5__EmptyDumpsterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__EmptyDumpsterResponse->soap_get(soap, "ns5:EmptyDumpsterResponse", "ns5:emptyDumpsterResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__enableSharedReminderRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__enableSharedReminderRequest *ns5__EnableSharedReminderRequest, ns5__enableSharedReminderResponse *ns5__EnableSharedReminderResponse)
{	struct __ns1__enableSharedReminderRequest soap_tmp___ns1__enableSharedReminderRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/EnableSharedReminder";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__enableSharedReminderRequest.ns5__EnableSharedReminderRequest = ns5__EnableSharedReminderRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__enableSharedReminderRequest(soap, &soap_tmp___ns1__enableSharedReminderRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__enableSharedReminderRequest(soap, &soap_tmp___ns1__enableSharedReminderRequest, "-ns1:enableSharedReminderRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__enableSharedReminderRequest(soap, &soap_tmp___ns1__enableSharedReminderRequest, "-ns1:enableSharedReminderRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__EnableSharedReminderResponse)
		return soap_closesock(soap);
	ns5__EnableSharedReminderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__EnableSharedReminderResponse->soap_get(soap, "ns5:EnableSharedReminderResponse", "ns5:enableSharedReminderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__expandRecurRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__expandRecurRequest *ns5__ExpandRecurRequest, ns5__expandRecurResponse *ns5__ExpandRecurResponse)
{	struct __ns1__expandRecurRequest soap_tmp___ns1__expandRecurRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ExpandRecur";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__expandRecurRequest.ns5__ExpandRecurRequest = ns5__ExpandRecurRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__expandRecurRequest(soap, &soap_tmp___ns1__expandRecurRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__expandRecurRequest(soap, &soap_tmp___ns1__expandRecurRequest, "-ns1:expandRecurRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__expandRecurRequest(soap, &soap_tmp___ns1__expandRecurRequest, "-ns1:expandRecurRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ExpandRecurResponse)
		return soap_closesock(soap);
	ns5__ExpandRecurResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ExpandRecurResponse->soap_get(soap, "ns5:ExpandRecurResponse", "ns5:expandRecurResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__exportContactsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__exportContactsRequest *ns5__ExportContactsRequest, ns5__exportContactsResponse *ns5__ExportContactsResponse)
{	struct __ns1__exportContactsRequest soap_tmp___ns1__exportContactsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ExportContacts";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__exportContactsRequest.ns5__ExportContactsRequest = ns5__ExportContactsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__exportContactsRequest(soap, &soap_tmp___ns1__exportContactsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__exportContactsRequest(soap, &soap_tmp___ns1__exportContactsRequest, "-ns1:exportContactsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__exportContactsRequest(soap, &soap_tmp___ns1__exportContactsRequest, "-ns1:exportContactsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ExportContactsResponse)
		return soap_closesock(soap);
	ns5__ExportContactsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ExportContactsResponse->soap_get(soap, "ns5:ExportContactsResponse", "ns5:exportContactsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__folderActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__folderActionRequest *ns5__FolderActionRequest, ns5__folderActionResponse *ns5__FolderActionResponse)
{	struct __ns1__folderActionRequest soap_tmp___ns1__folderActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/FolderAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__folderActionRequest.ns5__FolderActionRequest = ns5__FolderActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__folderActionRequest(soap, &soap_tmp___ns1__folderActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__folderActionRequest(soap, &soap_tmp___ns1__folderActionRequest, "-ns1:folderActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__folderActionRequest(soap, &soap_tmp___ns1__folderActionRequest, "-ns1:folderActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__FolderActionResponse)
		return soap_closesock(soap);
	ns5__FolderActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__FolderActionResponse->soap_get(soap, "ns5:FolderActionResponse", "ns5:folderActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__forwardAppointmentInviteRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__forwardAppointmentInviteRequest *ns5__ForwardAppointmentInviteRequest, ns5__forwardAppointmentInviteResponse *ns5__ForwardAppointmentInviteResponse)
{	struct __ns1__forwardAppointmentInviteRequest soap_tmp___ns1__forwardAppointmentInviteRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ForwardAppointmentInvite";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__forwardAppointmentInviteRequest.ns5__ForwardAppointmentInviteRequest = ns5__ForwardAppointmentInviteRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__forwardAppointmentInviteRequest(soap, &soap_tmp___ns1__forwardAppointmentInviteRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__forwardAppointmentInviteRequest(soap, &soap_tmp___ns1__forwardAppointmentInviteRequest, "-ns1:forwardAppointmentInviteRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__forwardAppointmentInviteRequest(soap, &soap_tmp___ns1__forwardAppointmentInviteRequest, "-ns1:forwardAppointmentInviteRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ForwardAppointmentInviteResponse)
		return soap_closesock(soap);
	ns5__ForwardAppointmentInviteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ForwardAppointmentInviteResponse->soap_get(soap, "ns5:ForwardAppointmentInviteResponse", "ns5:forwardAppointmentInviteResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__forwardAppointmentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__forwardAppointmentRequest *ns5__ForwardAppointmentRequest, ns5__forwardAppointmentResponse *ns5__ForwardAppointmentResponse)
{	struct __ns1__forwardAppointmentRequest soap_tmp___ns1__forwardAppointmentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ForwardAppointment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__forwardAppointmentRequest.ns5__ForwardAppointmentRequest = ns5__ForwardAppointmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__forwardAppointmentRequest(soap, &soap_tmp___ns1__forwardAppointmentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__forwardAppointmentRequest(soap, &soap_tmp___ns1__forwardAppointmentRequest, "-ns1:forwardAppointmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__forwardAppointmentRequest(soap, &soap_tmp___ns1__forwardAppointmentRequest, "-ns1:forwardAppointmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ForwardAppointmentResponse)
		return soap_closesock(soap);
	ns5__ForwardAppointmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ForwardAppointmentResponse->soap_get(soap, "ns5:ForwardAppointmentResponse", "ns5:forwardAppointmentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__generateUUIDRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__generateUUIDRequest *ns5__GenerateUUIDRequest, std::string &ns5__GenerateUUIDResponse)
{	struct __ns1__generateUUIDRequest soap_tmp___ns1__generateUUIDRequest;
	struct __ns1__generateUUIDRequestResponse *soap_tmp___ns1__generateUUIDRequestResponse;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GenerateUUID";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__generateUUIDRequest.ns5__GenerateUUIDRequest = ns5__GenerateUUIDRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__generateUUIDRequest(soap, &soap_tmp___ns1__generateUUIDRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__generateUUIDRequest(soap, &soap_tmp___ns1__generateUUIDRequest, "-ns1:generateUUIDRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__generateUUIDRequest(soap, &soap_tmp___ns1__generateUUIDRequest, "-ns1:generateUUIDRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns5__GenerateUUIDResponse)
		return soap_closesock(soap);
	soap_default_ns5__generateUUIDResponse(soap, &ns5__GenerateUUIDResponse);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__generateUUIDRequestResponse = soap_get___ns1__generateUUIDRequestResponse(soap, NULL, "-ns1:generateUUIDRequestResponse", "ns5:generateUUIDResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns5__GenerateUUIDResponse = soap_tmp___ns1__generateUUIDRequestResponse->ns5__GenerateUUIDResponse;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getActivityStreamRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getActivityStreamRequest *ns5__GetActivityStreamRequest, ns5__getActivityStreamResponse *ns5__GetActivityStreamResponse)
{	struct __ns1__getActivityStreamRequest soap_tmp___ns1__getActivityStreamRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetActivityStream";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getActivityStreamRequest.ns5__GetActivityStreamRequest = ns5__GetActivityStreamRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getActivityStreamRequest(soap, &soap_tmp___ns1__getActivityStreamRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getActivityStreamRequest(soap, &soap_tmp___ns1__getActivityStreamRequest, "-ns1:getActivityStreamRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getActivityStreamRequest(soap, &soap_tmp___ns1__getActivityStreamRequest, "-ns1:getActivityStreamRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetActivityStreamResponse)
		return soap_closesock(soap);
	ns5__GetActivityStreamResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetActivityStreamResponse->soap_get(soap, "ns5:GetActivityStreamResponse", "ns5:getActivityStreamResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAllDevicesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getAllDevicesRequest *ns5__GetAllDevicesRequest, ns5__getAllDevicesResponse *ns5__GetAllDevicesResponse)
{	struct __ns1__getAllDevicesRequest soap_tmp___ns1__getAllDevicesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetAllDevices";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAllDevicesRequest.ns5__GetAllDevicesRequest = ns5__GetAllDevicesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAllDevicesRequest(soap, &soap_tmp___ns1__getAllDevicesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAllDevicesRequest(soap, &soap_tmp___ns1__getAllDevicesRequest, "-ns1:getAllDevicesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAllDevicesRequest(soap, &soap_tmp___ns1__getAllDevicesRequest, "-ns1:getAllDevicesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetAllDevicesResponse)
		return soap_closesock(soap);
	ns5__GetAllDevicesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetAllDevicesResponse->soap_get(soap, "ns5:GetAllDevicesResponse", "ns5:getAllDevicesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getAppointmentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getAppointmentRequest *ns5__GetAppointmentRequest, ns5__getAppointmentResponse *ns5__GetAppointmentResponse)
{	struct __ns1__getAppointmentRequest soap_tmp___ns1__getAppointmentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetAppointment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getAppointmentRequest.ns5__GetAppointmentRequest = ns5__GetAppointmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getAppointmentRequest(soap, &soap_tmp___ns1__getAppointmentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getAppointmentRequest(soap, &soap_tmp___ns1__getAppointmentRequest, "-ns1:getAppointmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getAppointmentRequest(soap, &soap_tmp___ns1__getAppointmentRequest, "-ns1:getAppointmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetAppointmentResponse)
		return soap_closesock(soap);
	ns5__GetAppointmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetAppointmentResponse->soap_get(soap, "ns5:GetAppointmentResponse", "ns5:getAppointmentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getApptSummariesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getApptSummariesRequest *ns5__GetApptSummariesRequest, ns5__getApptSummariesResponse *ns5__GetApptSummariesResponse)
{	struct __ns1__getApptSummariesRequest soap_tmp___ns1__getApptSummariesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetApptSummaries";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getApptSummariesRequest.ns5__GetApptSummariesRequest = ns5__GetApptSummariesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getApptSummariesRequest(soap, &soap_tmp___ns1__getApptSummariesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getApptSummariesRequest(soap, &soap_tmp___ns1__getApptSummariesRequest, "-ns1:getApptSummariesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getApptSummariesRequest(soap, &soap_tmp___ns1__getApptSummariesRequest, "-ns1:getApptSummariesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetApptSummariesResponse)
		return soap_closesock(soap);
	ns5__GetApptSummariesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetApptSummariesResponse->soap_get(soap, "ns5:GetApptSummariesResponse", "ns5:getApptSummariesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getCalendarItemSummariesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getCalendarItemSummariesRequest *ns5__GetCalendarItemSummariesRequest, ns5__getCalendarItemSummariesResponse *ns5__GetCalendarItemSummariesResponse)
{	struct __ns1__getCalendarItemSummariesRequest soap_tmp___ns1__getCalendarItemSummariesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetCalendarItemSummaries";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCalendarItemSummariesRequest.ns5__GetCalendarItemSummariesRequest = ns5__GetCalendarItemSummariesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getCalendarItemSummariesRequest(soap, &soap_tmp___ns1__getCalendarItemSummariesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCalendarItemSummariesRequest(soap, &soap_tmp___ns1__getCalendarItemSummariesRequest, "-ns1:getCalendarItemSummariesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCalendarItemSummariesRequest(soap, &soap_tmp___ns1__getCalendarItemSummariesRequest, "-ns1:getCalendarItemSummariesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetCalendarItemSummariesResponse)
		return soap_closesock(soap);
	ns5__GetCalendarItemSummariesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCalendarItemSummariesResponse->soap_get(soap, "ns5:GetCalendarItemSummariesResponse", "ns5:getCalendarItemSummariesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getCommentsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getCommentsRequest *ns5__GetCommentsRequest, ns5__getCommentsResponse *ns5__GetCommentsResponse)
{	struct __ns1__getCommentsRequest soap_tmp___ns1__getCommentsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetComments";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCommentsRequest.ns5__GetCommentsRequest = ns5__GetCommentsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getCommentsRequest(soap, &soap_tmp___ns1__getCommentsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCommentsRequest(soap, &soap_tmp___ns1__getCommentsRequest, "-ns1:getCommentsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCommentsRequest(soap, &soap_tmp___ns1__getCommentsRequest, "-ns1:getCommentsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetCommentsResponse)
		return soap_closesock(soap);
	ns5__GetCommentsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCommentsResponse->soap_get(soap, "ns5:GetCommentsResponse", "ns5:getCommentsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getContactsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getContactsRequest *ns5__GetContactsRequest, ns5__getContactsResponse *ns5__GetContactsResponse)
{	struct __ns1__getContactsRequest soap_tmp___ns1__getContactsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetContacts";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getContactsRequest.ns5__GetContactsRequest = ns5__GetContactsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getContactsRequest(soap, &soap_tmp___ns1__getContactsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getContactsRequest(soap, &soap_tmp___ns1__getContactsRequest, "-ns1:getContactsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getContactsRequest(soap, &soap_tmp___ns1__getContactsRequest, "-ns1:getContactsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetContactsResponse)
		return soap_closesock(soap);
	ns5__GetContactsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetContactsResponse->soap_get(soap, "ns5:GetContactsResponse", "ns5:getContactsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getConvRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getConvRequest *ns5__GetConvRequest, ns5__getConvResponse *ns5__GetConvResponse)
{	struct __ns1__getConvRequest soap_tmp___ns1__getConvRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetConv";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getConvRequest.ns5__GetConvRequest = ns5__GetConvRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getConvRequest(soap, &soap_tmp___ns1__getConvRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getConvRequest(soap, &soap_tmp___ns1__getConvRequest, "-ns1:getConvRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getConvRequest(soap, &soap_tmp___ns1__getConvRequest, "-ns1:getConvRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetConvResponse)
		return soap_closesock(soap);
	ns5__GetConvResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetConvResponse->soap_get(soap, "ns5:GetConvResponse", "ns5:getConvResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getCustomMetadataRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getCustomMetadataRequest *ns5__GetCustomMetadataRequest, ns5__getCustomMetadataResponse *ns5__GetCustomMetadataResponse)
{	struct __ns1__getCustomMetadataRequest soap_tmp___ns1__getCustomMetadataRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetCustomMetadata";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getCustomMetadataRequest.ns5__GetCustomMetadataRequest = ns5__GetCustomMetadataRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getCustomMetadataRequest(soap, &soap_tmp___ns1__getCustomMetadataRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getCustomMetadataRequest(soap, &soap_tmp___ns1__getCustomMetadataRequest, "-ns1:getCustomMetadataRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getCustomMetadataRequest(soap, &soap_tmp___ns1__getCustomMetadataRequest, "-ns1:getCustomMetadataRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetCustomMetadataResponse)
		return soap_closesock(soap);
	ns5__GetCustomMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetCustomMetadataResponse->soap_get(soap, "ns5:GetCustomMetadataResponse", "ns5:getCustomMetadataResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getDataSourcesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getDataSourcesRequest *ns5__GetDataSourcesRequest, ns5__getDataSourcesResponse *ns5__GetDataSourcesResponse)
{	struct __ns1__getDataSourcesRequest soap_tmp___ns1__getDataSourcesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetDataSources";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getDataSourcesRequest.ns5__GetDataSourcesRequest = ns5__GetDataSourcesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getDataSourcesRequest(soap, &soap_tmp___ns1__getDataSourcesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getDataSourcesRequest(soap, &soap_tmp___ns1__getDataSourcesRequest, "-ns1:getDataSourcesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getDataSourcesRequest(soap, &soap_tmp___ns1__getDataSourcesRequest, "-ns1:getDataSourcesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetDataSourcesResponse)
		return soap_closesock(soap);
	ns5__GetDataSourcesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetDataSourcesResponse->soap_get(soap, "ns5:GetDataSourcesResponse", "ns5:getDataSourcesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getDocumentShareURLRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getDocumentShareURLRequest *ns5__GetDocumentShareURLRequest, std::string &ns5__GetDocumentShareURLResponse)
{	struct __ns1__getDocumentShareURLRequest soap_tmp___ns1__getDocumentShareURLRequest;
	struct __ns1__getDocumentShareURLRequestResponse *soap_tmp___ns1__getDocumentShareURLRequestResponse;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetDocumentShareURL";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getDocumentShareURLRequest.ns5__GetDocumentShareURLRequest = ns5__GetDocumentShareURLRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getDocumentShareURLRequest(soap, &soap_tmp___ns1__getDocumentShareURLRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getDocumentShareURLRequest(soap, &soap_tmp___ns1__getDocumentShareURLRequest, "-ns1:getDocumentShareURLRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getDocumentShareURLRequest(soap, &soap_tmp___ns1__getDocumentShareURLRequest, "-ns1:getDocumentShareURLRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ns5__GetDocumentShareURLResponse)
		return soap_closesock(soap);
	soap_default_ns5__getDocumentShareURLResponse(soap, &ns5__GetDocumentShareURLResponse);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp___ns1__getDocumentShareURLRequestResponse = soap_get___ns1__getDocumentShareURLRequestResponse(soap, NULL, "-ns1:getDocumentShareURLRequestResponse", "ns5:getDocumentShareURLResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ns5__GetDocumentShareURLResponse = soap_tmp___ns1__getDocumentShareURLRequestResponse->ns5__GetDocumentShareURLResponse;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getEffectiveFolderPermsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getEffectiveFolderPermsRequest *ns5__GetEffectiveFolderPermsRequest, ns5__getEffectiveFolderPermsResponse *ns5__GetEffectiveFolderPermsResponse)
{	struct __ns1__getEffectiveFolderPermsRequest soap_tmp___ns1__getEffectiveFolderPermsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetEffectiveFolderPerms";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getEffectiveFolderPermsRequest.ns5__GetEffectiveFolderPermsRequest = ns5__GetEffectiveFolderPermsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getEffectiveFolderPermsRequest(soap, &soap_tmp___ns1__getEffectiveFolderPermsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getEffectiveFolderPermsRequest(soap, &soap_tmp___ns1__getEffectiveFolderPermsRequest, "-ns1:getEffectiveFolderPermsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getEffectiveFolderPermsRequest(soap, &soap_tmp___ns1__getEffectiveFolderPermsRequest, "-ns1:getEffectiveFolderPermsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetEffectiveFolderPermsResponse)
		return soap_closesock(soap);
	ns5__GetEffectiveFolderPermsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetEffectiveFolderPermsResponse->soap_get(soap, "ns5:GetEffectiveFolderPermsResponse", "ns5:getEffectiveFolderPermsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getFilterRulesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getFilterRulesRequest *ns5__GetFilterRulesRequest, ns5__getFilterRulesResponse *ns5__GetFilterRulesResponse)
{	struct __ns1__getFilterRulesRequest soap_tmp___ns1__getFilterRulesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetFilterRules";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getFilterRulesRequest.ns5__GetFilterRulesRequest = ns5__GetFilterRulesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getFilterRulesRequest(soap, &soap_tmp___ns1__getFilterRulesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getFilterRulesRequest(soap, &soap_tmp___ns1__getFilterRulesRequest, "-ns1:getFilterRulesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getFilterRulesRequest(soap, &soap_tmp___ns1__getFilterRulesRequest, "-ns1:getFilterRulesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetFilterRulesResponse)
		return soap_closesock(soap);
	ns5__GetFilterRulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetFilterRulesResponse->soap_get(soap, "ns5:GetFilterRulesResponse", "ns5:getFilterRulesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getFolderRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getFolderRequest *ns5__GetFolderRequest, ns5__getFolderResponse *ns5__GetFolderResponse)
{	struct __ns1__getFolderRequest soap_tmp___ns1__getFolderRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetFolder";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getFolderRequest.ns5__GetFolderRequest = ns5__GetFolderRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getFolderRequest(soap, &soap_tmp___ns1__getFolderRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getFolderRequest(soap, &soap_tmp___ns1__getFolderRequest, "-ns1:getFolderRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getFolderRequest(soap, &soap_tmp___ns1__getFolderRequest, "-ns1:getFolderRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetFolderResponse)
		return soap_closesock(soap);
	ns5__GetFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetFolderResponse->soap_get(soap, "ns5:GetFolderResponse", "ns5:getFolderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getFreeBusyRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getFreeBusyRequest *ns5__GetFreeBusyRequest, ns5__getFreeBusyResponse *ns5__GetFreeBusyResponse)
{	struct __ns1__getFreeBusyRequest soap_tmp___ns1__getFreeBusyRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetFreeBusy";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getFreeBusyRequest.ns5__GetFreeBusyRequest = ns5__GetFreeBusyRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getFreeBusyRequest(soap, &soap_tmp___ns1__getFreeBusyRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getFreeBusyRequest(soap, &soap_tmp___ns1__getFreeBusyRequest, "-ns1:getFreeBusyRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getFreeBusyRequest(soap, &soap_tmp___ns1__getFreeBusyRequest, "-ns1:getFreeBusyRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetFreeBusyResponse)
		return soap_closesock(soap);
	ns5__GetFreeBusyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetFreeBusyResponse->soap_get(soap, "ns5:GetFreeBusyResponse", "ns5:getFreeBusyResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getICalRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getICalRequest *ns5__GetICalRequest, ns5__getICalResponse *ns5__GetICalResponse)
{	struct __ns1__getICalRequest soap_tmp___ns1__getICalRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetICal";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getICalRequest.ns5__GetICalRequest = ns5__GetICalRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getICalRequest(soap, &soap_tmp___ns1__getICalRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getICalRequest(soap, &soap_tmp___ns1__getICalRequest, "-ns1:getICalRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getICalRequest(soap, &soap_tmp___ns1__getICalRequest, "-ns1:getICalRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetICalResponse)
		return soap_closesock(soap);
	ns5__GetICalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetICalResponse->soap_get(soap, "ns5:GetICalResponse", "ns5:getICalResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getImportStatusRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getImportStatusRequest *ns5__GetImportStatusRequest, ns5__getImportStatusResponse *ns5__GetImportStatusResponse)
{	struct __ns1__getImportStatusRequest soap_tmp___ns1__getImportStatusRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetImportStatus";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getImportStatusRequest.ns5__GetImportStatusRequest = ns5__GetImportStatusRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getImportStatusRequest(soap, &soap_tmp___ns1__getImportStatusRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getImportStatusRequest(soap, &soap_tmp___ns1__getImportStatusRequest, "-ns1:getImportStatusRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getImportStatusRequest(soap, &soap_tmp___ns1__getImportStatusRequest, "-ns1:getImportStatusRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetImportStatusResponse)
		return soap_closesock(soap);
	ns5__GetImportStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetImportStatusResponse->soap_get(soap, "ns5:GetImportStatusResponse", "ns5:getImportStatusResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getItemRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getItemRequest *ns5__GetItemRequest, ns5__getItemResponse *ns5__GetItemResponse)
{	struct __ns1__getItemRequest soap_tmp___ns1__getItemRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetItem";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getItemRequest.ns5__GetItemRequest = ns5__GetItemRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getItemRequest(soap, &soap_tmp___ns1__getItemRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getItemRequest(soap, &soap_tmp___ns1__getItemRequest, "-ns1:getItemRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getItemRequest(soap, &soap_tmp___ns1__getItemRequest, "-ns1:getItemRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetItemResponse)
		return soap_closesock(soap);
	ns5__GetItemResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetItemResponse->soap_get(soap, "ns5:GetItemResponse", "ns5:getItemResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMailboxMetadataRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getMailboxMetadataRequest *ns5__GetMailboxMetadataRequest, ns5__getMailboxMetadataResponse *ns5__GetMailboxMetadataResponse)
{	struct __ns1__getMailboxMetadataRequest soap_tmp___ns1__getMailboxMetadataRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetMailboxMetadata";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getMailboxMetadataRequest.ns5__GetMailboxMetadataRequest = ns5__GetMailboxMetadataRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getMailboxMetadataRequest(soap, &soap_tmp___ns1__getMailboxMetadataRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMailboxMetadataRequest(soap, &soap_tmp___ns1__getMailboxMetadataRequest, "-ns1:getMailboxMetadataRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMailboxMetadataRequest(soap, &soap_tmp___ns1__getMailboxMetadataRequest, "-ns1:getMailboxMetadataRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetMailboxMetadataResponse)
		return soap_closesock(soap);
	ns5__GetMailboxMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetMailboxMetadataResponse->soap_get(soap, "ns5:GetMailboxMetadataResponse", "ns5:getMailboxMetadataResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMiniCalRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getMiniCalRequest *ns5__GetMiniCalRequest, ns5__getMiniCalResponse *ns5__GetMiniCalResponse)
{	struct __ns1__getMiniCalRequest soap_tmp___ns1__getMiniCalRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetMiniCal";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getMiniCalRequest.ns5__GetMiniCalRequest = ns5__GetMiniCalRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getMiniCalRequest(soap, &soap_tmp___ns1__getMiniCalRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMiniCalRequest(soap, &soap_tmp___ns1__getMiniCalRequest, "-ns1:getMiniCalRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMiniCalRequest(soap, &soap_tmp___ns1__getMiniCalRequest, "-ns1:getMiniCalRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetMiniCalResponse)
		return soap_closesock(soap);
	ns5__GetMiniCalResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetMiniCalResponse->soap_get(soap, "ns5:GetMiniCalResponse", "ns5:getMiniCalResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMsgMetadataRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getMsgMetadataRequest *ns5__GetMsgMetadataRequest, ns5__getMsgMetadataResponse *ns5__GetMsgMetadataResponse)
{	struct __ns1__getMsgMetadataRequest soap_tmp___ns1__getMsgMetadataRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetMsgMetadata";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getMsgMetadataRequest.ns5__GetMsgMetadataRequest = ns5__GetMsgMetadataRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getMsgMetadataRequest(soap, &soap_tmp___ns1__getMsgMetadataRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMsgMetadataRequest(soap, &soap_tmp___ns1__getMsgMetadataRequest, "-ns1:getMsgMetadataRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMsgMetadataRequest(soap, &soap_tmp___ns1__getMsgMetadataRequest, "-ns1:getMsgMetadataRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetMsgMetadataResponse)
		return soap_closesock(soap);
	ns5__GetMsgMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetMsgMetadataResponse->soap_get(soap, "ns5:GetMsgMetadataResponse", "ns5:getMsgMetadataResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getMsgRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getMsgRequest *ns5__GetMsgRequest, ns5__getMsgResponse *ns5__GetMsgResponse)
{	struct __ns1__getMsgRequest soap_tmp___ns1__getMsgRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetMsg";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getMsgRequest.ns5__GetMsgRequest = ns5__GetMsgRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getMsgRequest(soap, &soap_tmp___ns1__getMsgRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getMsgRequest(soap, &soap_tmp___ns1__getMsgRequest, "-ns1:getMsgRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getMsgRequest(soap, &soap_tmp___ns1__getMsgRequest, "-ns1:getMsgRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetMsgResponse)
		return soap_closesock(soap);
	ns5__GetMsgResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetMsgResponse->soap_get(soap, "ns5:GetMsgResponse", "ns5:getMsgResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getNoteRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getNoteRequest *ns5__GetNoteRequest, ns5__getNoteResponse *ns5__GetNoteResponse)
{	struct __ns1__getNoteRequest soap_tmp___ns1__getNoteRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetNote";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getNoteRequest.ns5__GetNoteRequest = ns5__GetNoteRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getNoteRequest(soap, &soap_tmp___ns1__getNoteRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getNoteRequest(soap, &soap_tmp___ns1__getNoteRequest, "-ns1:getNoteRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getNoteRequest(soap, &soap_tmp___ns1__getNoteRequest, "-ns1:getNoteRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetNoteResponse)
		return soap_closesock(soap);
	ns5__GetNoteResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetNoteResponse->soap_get(soap, "ns5:GetNoteResponse", "ns5:getNoteResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getNotificationsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getNotificationsRequest *ns5__GetNotificationsRequest, ns5__getNotificationsResponse *ns5__GetNotificationsResponse)
{	struct __ns1__getNotificationsRequest soap_tmp___ns1__getNotificationsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetNotifications";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getNotificationsRequest.ns5__GetNotificationsRequest = ns5__GetNotificationsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getNotificationsRequest(soap, &soap_tmp___ns1__getNotificationsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getNotificationsRequest(soap, &soap_tmp___ns1__getNotificationsRequest, "-ns1:getNotificationsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getNotificationsRequest(soap, &soap_tmp___ns1__getNotificationsRequest, "-ns1:getNotificationsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetNotificationsResponse)
		return soap_closesock(soap);
	ns5__GetNotificationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetNotificationsResponse->soap_get(soap, "ns5:GetNotificationsResponse", "ns5:getNotificationsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getOutgoingFilterRulesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getOutgoingFilterRulesRequest *ns5__GetOutgoingFilterRulesRequest, ns5__getOutgoingFilterRulesResponse *ns5__GetOutgoingFilterRulesResponse)
{	struct __ns1__getOutgoingFilterRulesRequest soap_tmp___ns1__getOutgoingFilterRulesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetOutgoingFilterRules";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getOutgoingFilterRulesRequest.ns5__GetOutgoingFilterRulesRequest = ns5__GetOutgoingFilterRulesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__getOutgoingFilterRulesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__getOutgoingFilterRulesRequest, "-ns1:getOutgoingFilterRulesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__getOutgoingFilterRulesRequest, "-ns1:getOutgoingFilterRulesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetOutgoingFilterRulesResponse)
		return soap_closesock(soap);
	ns5__GetOutgoingFilterRulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetOutgoingFilterRulesResponse->soap_get(soap, "ns5:GetOutgoingFilterRulesResponse", "ns5:getOutgoingFilterRulesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getPermissionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getPermissionRequest *ns5__GetPermissionRequest, ns5__getPermissionResponse *ns5__GetPermissionResponse)
{	struct __ns1__getPermissionRequest soap_tmp___ns1__getPermissionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetPermission";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getPermissionRequest.ns5__GetPermissionRequest = ns5__GetPermissionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getPermissionRequest(soap, &soap_tmp___ns1__getPermissionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getPermissionRequest(soap, &soap_tmp___ns1__getPermissionRequest, "-ns1:getPermissionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getPermissionRequest(soap, &soap_tmp___ns1__getPermissionRequest, "-ns1:getPermissionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetPermissionResponse)
		return soap_closesock(soap);
	ns5__GetPermissionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetPermissionResponse->soap_get(soap, "ns5:GetPermissionResponse", "ns5:getPermissionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getRecurRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getRecurRequest *ns5__GetRecurRequest, ns5__getRecurResponse *ns5__GetRecurResponse)
{	struct __ns1__getRecurRequest soap_tmp___ns1__getRecurRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetRecur";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getRecurRequest.ns5__GetRecurRequest = ns5__GetRecurRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getRecurRequest(soap, &soap_tmp___ns1__getRecurRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getRecurRequest(soap, &soap_tmp___ns1__getRecurRequest, "-ns1:getRecurRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getRecurRequest(soap, &soap_tmp___ns1__getRecurRequest, "-ns1:getRecurRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetRecurResponse)
		return soap_closesock(soap);
	ns5__GetRecurResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetRecurResponse->soap_get(soap, "ns5:GetRecurResponse", "ns5:getRecurResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getSearchFolderRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getSearchFolderRequest *ns5__GetSearchFolderRequest, ns5__getSearchFolderResponse *ns5__GetSearchFolderResponse)
{	struct __ns1__getSearchFolderRequest soap_tmp___ns1__getSearchFolderRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetSearchFolder";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getSearchFolderRequest.ns5__GetSearchFolderRequest = ns5__GetSearchFolderRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getSearchFolderRequest(soap, &soap_tmp___ns1__getSearchFolderRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getSearchFolderRequest(soap, &soap_tmp___ns1__getSearchFolderRequest, "-ns1:getSearchFolderRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getSearchFolderRequest(soap, &soap_tmp___ns1__getSearchFolderRequest, "-ns1:getSearchFolderRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetSearchFolderResponse)
		return soap_closesock(soap);
	ns5__GetSearchFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetSearchFolderResponse->soap_get(soap, "ns5:GetSearchFolderResponse", "ns5:getSearchFolderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getShareDetailsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getShareDetailsRequest *ns5__GetShareDetailsRequest, ns5__getShareDetailsResponse *ns5__GetShareDetailsResponse)
{	struct __ns1__getShareDetailsRequest soap_tmp___ns1__getShareDetailsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetShareDetails";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getShareDetailsRequest.ns5__GetShareDetailsRequest = ns5__GetShareDetailsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getShareDetailsRequest(soap, &soap_tmp___ns1__getShareDetailsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getShareDetailsRequest(soap, &soap_tmp___ns1__getShareDetailsRequest, "-ns1:getShareDetailsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getShareDetailsRequest(soap, &soap_tmp___ns1__getShareDetailsRequest, "-ns1:getShareDetailsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetShareDetailsResponse)
		return soap_closesock(soap);
	ns5__GetShareDetailsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetShareDetailsResponse->soap_get(soap, "ns5:GetShareDetailsResponse", "ns5:getShareDetailsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getShareNotificationsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getShareNotificationsRequest *ns5__GetShareNotificationsRequest, ns5__getShareNotificationsResponse *ns5__GetShareNotificationsResponse)
{	struct __ns1__getShareNotificationsRequest soap_tmp___ns1__getShareNotificationsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetShareNotifications";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getShareNotificationsRequest.ns5__GetShareNotificationsRequest = ns5__GetShareNotificationsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getShareNotificationsRequest(soap, &soap_tmp___ns1__getShareNotificationsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getShareNotificationsRequest(soap, &soap_tmp___ns1__getShareNotificationsRequest, "-ns1:getShareNotificationsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getShareNotificationsRequest(soap, &soap_tmp___ns1__getShareNotificationsRequest, "-ns1:getShareNotificationsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetShareNotificationsResponse)
		return soap_closesock(soap);
	ns5__GetShareNotificationsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetShareNotificationsResponse->soap_get(soap, "ns5:GetShareNotificationsResponse", "ns5:getShareNotificationsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getSpellDictionariesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getSpellDictionariesRequest *ns5__GetSpellDictionariesRequest, ns5__getSpellDictionariesResponse *ns5__GetSpellDictionariesResponse)
{	struct __ns1__getSpellDictionariesRequest soap_tmp___ns1__getSpellDictionariesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetSpellDictionaries";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getSpellDictionariesRequest.ns5__GetSpellDictionariesRequest = ns5__GetSpellDictionariesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getSpellDictionariesRequest(soap, &soap_tmp___ns1__getSpellDictionariesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getSpellDictionariesRequest(soap, &soap_tmp___ns1__getSpellDictionariesRequest, "-ns1:getSpellDictionariesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getSpellDictionariesRequest(soap, &soap_tmp___ns1__getSpellDictionariesRequest, "-ns1:getSpellDictionariesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetSpellDictionariesResponse)
		return soap_closesock(soap);
	ns5__GetSpellDictionariesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetSpellDictionariesResponse->soap_get(soap, "ns5:GetSpellDictionariesResponse", "ns5:getSpellDictionariesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getSystemRetentionPolicyRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getSystemRetentionPolicyRequest *ns5__GetSystemRetentionPolicyRequest, ns5__getSystemRetentionPolicyResponse *ns5__GetSystemRetentionPolicyResponse)
{	struct __ns1__getSystemRetentionPolicyRequest soap_tmp___ns1__getSystemRetentionPolicyRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetSystemRetentionPolicy";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getSystemRetentionPolicyRequest.ns5__GetSystemRetentionPolicyRequest = ns5__GetSystemRetentionPolicyRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getSystemRetentionPolicyRequest(soap, &soap_tmp___ns1__getSystemRetentionPolicyRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getSystemRetentionPolicyRequest(soap, &soap_tmp___ns1__getSystemRetentionPolicyRequest, "-ns1:getSystemRetentionPolicyRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getSystemRetentionPolicyRequest(soap, &soap_tmp___ns1__getSystemRetentionPolicyRequest, "-ns1:getSystemRetentionPolicyRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetSystemRetentionPolicyResponse)
		return soap_closesock(soap);
	ns5__GetSystemRetentionPolicyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetSystemRetentionPolicyResponse->soap_get(soap, "ns5:GetSystemRetentionPolicyResponse", "ns5:getSystemRetentionPolicyResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getTagRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getTagRequest *ns5__GetTagRequest, ns5__getTagResponse *ns5__GetTagResponse)
{	struct __ns1__getTagRequest soap_tmp___ns1__getTagRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetTag";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTagRequest.ns5__GetTagRequest = ns5__GetTagRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTagRequest(soap, &soap_tmp___ns1__getTagRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTagRequest(soap, &soap_tmp___ns1__getTagRequest, "-ns1:getTagRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTagRequest(soap, &soap_tmp___ns1__getTagRequest, "-ns1:getTagRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetTagResponse)
		return soap_closesock(soap);
	ns5__GetTagResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetTagResponse->soap_get(soap, "ns5:GetTagResponse", "ns5:getTagResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getTaskRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getTaskRequest *ns5__GetTaskRequest, ns5__getTaskResponse *ns5__GetTaskResponse)
{	struct __ns1__getTaskRequest soap_tmp___ns1__getTaskRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetTask";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTaskRequest.ns5__GetTaskRequest = ns5__GetTaskRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTaskRequest(soap, &soap_tmp___ns1__getTaskRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTaskRequest(soap, &soap_tmp___ns1__getTaskRequest, "-ns1:getTaskRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTaskRequest(soap, &soap_tmp___ns1__getTaskRequest, "-ns1:getTaskRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetTaskResponse)
		return soap_closesock(soap);
	ns5__GetTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetTaskResponse->soap_get(soap, "ns5:GetTaskResponse", "ns5:getTaskResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getTaskSummariesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getTaskSummariesRequest *ns5__GetTaskSummariesRequest, ns5__getTaskSummariesResponse *ns5__GetTaskSummariesResponse)
{	struct __ns1__getTaskSummariesRequest soap_tmp___ns1__getTaskSummariesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetTaskSummaries";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getTaskSummariesRequest.ns5__GetTaskSummariesRequest = ns5__GetTaskSummariesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getTaskSummariesRequest(soap, &soap_tmp___ns1__getTaskSummariesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getTaskSummariesRequest(soap, &soap_tmp___ns1__getTaskSummariesRequest, "-ns1:getTaskSummariesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getTaskSummariesRequest(soap, &soap_tmp___ns1__getTaskSummariesRequest, "-ns1:getTaskSummariesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetTaskSummariesResponse)
		return soap_closesock(soap);
	ns5__GetTaskSummariesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetTaskSummariesResponse->soap_get(soap, "ns5:GetTaskSummariesResponse", "ns5:getTaskSummariesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getWatchersRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getWatchersRequest *ns5__GetWatchersRequest, ns5__getWatchersResponse *ns5__GetWatchersResponse)
{	struct __ns1__getWatchersRequest soap_tmp___ns1__getWatchersRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetWatchers";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getWatchersRequest.ns5__GetWatchersRequest = ns5__GetWatchersRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getWatchersRequest(soap, &soap_tmp___ns1__getWatchersRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getWatchersRequest(soap, &soap_tmp___ns1__getWatchersRequest, "-ns1:getWatchersRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getWatchersRequest(soap, &soap_tmp___ns1__getWatchersRequest, "-ns1:getWatchersRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetWatchersResponse)
		return soap_closesock(soap);
	ns5__GetWatchersResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetWatchersResponse->soap_get(soap, "ns5:GetWatchersResponse", "ns5:getWatchersResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getWatchingItemsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getWatchingItemsRequest *ns5__GetWatchingItemsRequest, ns5__getWatchingItemsResponse *ns5__GetWatchingItemsResponse)
{	struct __ns1__getWatchingItemsRequest soap_tmp___ns1__getWatchingItemsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetWatchingItems";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getWatchingItemsRequest.ns5__GetWatchingItemsRequest = ns5__GetWatchingItemsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getWatchingItemsRequest(soap, &soap_tmp___ns1__getWatchingItemsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getWatchingItemsRequest(soap, &soap_tmp___ns1__getWatchingItemsRequest, "-ns1:getWatchingItemsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getWatchingItemsRequest(soap, &soap_tmp___ns1__getWatchingItemsRequest, "-ns1:getWatchingItemsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetWatchingItemsResponse)
		return soap_closesock(soap);
	ns5__GetWatchingItemsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetWatchingItemsResponse->soap_get(soap, "ns5:GetWatchingItemsResponse", "ns5:getWatchingItemsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getWorkingHoursRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getWorkingHoursRequest *ns5__GetWorkingHoursRequest, ns5__getWorkingHoursResponse *ns5__GetWorkingHoursResponse)
{	struct __ns1__getWorkingHoursRequest soap_tmp___ns1__getWorkingHoursRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetWorkingHours";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getWorkingHoursRequest.ns5__GetWorkingHoursRequest = ns5__GetWorkingHoursRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getWorkingHoursRequest(soap, &soap_tmp___ns1__getWorkingHoursRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getWorkingHoursRequest(soap, &soap_tmp___ns1__getWorkingHoursRequest, "-ns1:getWorkingHoursRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getWorkingHoursRequest(soap, &soap_tmp___ns1__getWorkingHoursRequest, "-ns1:getWorkingHoursRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetWorkingHoursResponse)
		return soap_closesock(soap);
	ns5__GetWorkingHoursResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetWorkingHoursResponse->soap_get(soap, "ns5:GetWorkingHoursResponse", "ns5:getWorkingHoursResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getYahooAuthTokenRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getYahooAuthTokenRequest *ns5__GetYahooAuthTokenRequest, ns5__getYahooAuthTokenResponse *ns5__GetYahooAuthTokenResponse)
{	struct __ns1__getYahooAuthTokenRequest soap_tmp___ns1__getYahooAuthTokenRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetYahooAuthToken";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getYahooAuthTokenRequest.ns5__GetYahooAuthTokenRequest = ns5__GetYahooAuthTokenRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getYahooAuthTokenRequest(soap, &soap_tmp___ns1__getYahooAuthTokenRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getYahooAuthTokenRequest(soap, &soap_tmp___ns1__getYahooAuthTokenRequest, "-ns1:getYahooAuthTokenRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getYahooAuthTokenRequest(soap, &soap_tmp___ns1__getYahooAuthTokenRequest, "-ns1:getYahooAuthTokenRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetYahooAuthTokenResponse)
		return soap_closesock(soap);
	ns5__GetYahooAuthTokenResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetYahooAuthTokenResponse->soap_get(soap, "ns5:GetYahooAuthTokenResponse", "ns5:getYahooAuthTokenResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getYahooCookieRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__getYahooCookieRequest *ns5__GetYahooCookieRequest, ns5__getYahooCookieResponse *ns5__GetYahooCookieResponse)
{	struct __ns1__getYahooCookieRequest soap_tmp___ns1__getYahooCookieRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GetYahooCookie";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getYahooCookieRequest.ns5__GetYahooCookieRequest = ns5__GetYahooCookieRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getYahooCookieRequest(soap, &soap_tmp___ns1__getYahooCookieRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getYahooCookieRequest(soap, &soap_tmp___ns1__getYahooCookieRequest, "-ns1:getYahooCookieRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getYahooCookieRequest(soap, &soap_tmp___ns1__getYahooCookieRequest, "-ns1:getYahooCookieRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GetYahooCookieResponse)
		return soap_closesock(soap);
	ns5__GetYahooCookieResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GetYahooCookieResponse->soap_get(soap, "ns5:GetYahooCookieResponse", "ns5:getYahooCookieResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__grantPermissionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__grantPermissionRequest *ns5__GrantPermissionRequest, ns5__grantPermissionResponse *ns5__GrantPermissionResponse)
{	struct __ns1__grantPermissionRequest soap_tmp___ns1__grantPermissionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/GrantPermission";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__grantPermissionRequest.ns5__GrantPermissionRequest = ns5__GrantPermissionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__grantPermissionRequest(soap, &soap_tmp___ns1__grantPermissionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__grantPermissionRequest(soap, &soap_tmp___ns1__grantPermissionRequest, "-ns1:grantPermissionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__grantPermissionRequest(soap, &soap_tmp___ns1__grantPermissionRequest, "-ns1:grantPermissionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__GrantPermissionResponse)
		return soap_closesock(soap);
	ns5__GrantPermissionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__GrantPermissionResponse->soap_get(soap, "ns5:GrantPermissionResponse", "ns5:grantPermissionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__iCalReplyRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__iCalReplyRequest *ns5__ICalReplyRequest, ns5__iCalReplyResponse *ns5__ICalReplyResponse)
{	struct __ns1__iCalReplyRequest soap_tmp___ns1__iCalReplyRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ICalReply";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__iCalReplyRequest.ns5__ICalReplyRequest = ns5__ICalReplyRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__iCalReplyRequest(soap, &soap_tmp___ns1__iCalReplyRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__iCalReplyRequest(soap, &soap_tmp___ns1__iCalReplyRequest, "-ns1:iCalReplyRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__iCalReplyRequest(soap, &soap_tmp___ns1__iCalReplyRequest, "-ns1:iCalReplyRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ICalReplyResponse)
		return soap_closesock(soap);
	ns5__ICalReplyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ICalReplyResponse->soap_get(soap, "ns5:ICalReplyResponse", "ns5:iCalReplyResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__importAppointmentsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__importAppointmentsRequest *ns5__ImportAppointmentsRequest, ns5__importAppointmentsResponse *ns5__ImportAppointmentsResponse)
{	struct __ns1__importAppointmentsRequest soap_tmp___ns1__importAppointmentsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ImportAppointments";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__importAppointmentsRequest.ns5__ImportAppointmentsRequest = ns5__ImportAppointmentsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__importAppointmentsRequest(soap, &soap_tmp___ns1__importAppointmentsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__importAppointmentsRequest(soap, &soap_tmp___ns1__importAppointmentsRequest, "-ns1:importAppointmentsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__importAppointmentsRequest(soap, &soap_tmp___ns1__importAppointmentsRequest, "-ns1:importAppointmentsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ImportAppointmentsResponse)
		return soap_closesock(soap);
	ns5__ImportAppointmentsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ImportAppointmentsResponse->soap_get(soap, "ns5:ImportAppointmentsResponse", "ns5:importAppointmentsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__importContactsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__importContactsRequest *ns5__ImportContactsRequest, ns5__importContactsResponse *ns5__ImportContactsResponse)
{	struct __ns1__importContactsRequest soap_tmp___ns1__importContactsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ImportContacts";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__importContactsRequest.ns5__ImportContactsRequest = ns5__ImportContactsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__importContactsRequest(soap, &soap_tmp___ns1__importContactsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__importContactsRequest(soap, &soap_tmp___ns1__importContactsRequest, "-ns1:importContactsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__importContactsRequest(soap, &soap_tmp___ns1__importContactsRequest, "-ns1:importContactsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ImportContactsResponse)
		return soap_closesock(soap);
	ns5__ImportContactsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ImportContactsResponse->soap_get(soap, "ns5:ImportContactsResponse", "ns5:importContactsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__importDataRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__importDataRequest *ns5__ImportDataRequest, ns5__importDataResponse *ns5__ImportDataResponse)
{	struct __ns1__importDataRequest soap_tmp___ns1__importDataRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ImportData";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__importDataRequest.ns5__ImportDataRequest = ns5__ImportDataRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__importDataRequest(soap, &soap_tmp___ns1__importDataRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__importDataRequest(soap, &soap_tmp___ns1__importDataRequest, "-ns1:importDataRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__importDataRequest(soap, &soap_tmp___ns1__importDataRequest, "-ns1:importDataRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ImportDataResponse)
		return soap_closesock(soap);
	ns5__ImportDataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ImportDataResponse->soap_get(soap, "ns5:ImportDataResponse", "ns5:importDataResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__invalidateReminderDeviceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__invalidateReminderDeviceRequest *ns5__InvalidateReminderDeviceRequest, ns5__invalidateReminderDeviceResponse *ns5__InvalidateReminderDeviceResponse)
{	struct __ns1__invalidateReminderDeviceRequest soap_tmp___ns1__invalidateReminderDeviceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/InvalidateReminderDevice";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__invalidateReminderDeviceRequest.ns5__InvalidateReminderDeviceRequest = ns5__InvalidateReminderDeviceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__invalidateReminderDeviceRequest(soap, &soap_tmp___ns1__invalidateReminderDeviceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__invalidateReminderDeviceRequest(soap, &soap_tmp___ns1__invalidateReminderDeviceRequest, "-ns1:invalidateReminderDeviceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__invalidateReminderDeviceRequest(soap, &soap_tmp___ns1__invalidateReminderDeviceRequest, "-ns1:invalidateReminderDeviceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__InvalidateReminderDeviceResponse)
		return soap_closesock(soap);
	ns5__InvalidateReminderDeviceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__InvalidateReminderDeviceResponse->soap_get(soap, "ns5:InvalidateReminderDeviceResponse", "ns5:invalidateReminderDeviceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__itemActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__itemActionRequest *ns5__ItemActionRequest, ns5__itemActionResponse *ns5__ItemActionResponse)
{	struct __ns1__itemActionRequest soap_tmp___ns1__itemActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ItemAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__itemActionRequest.ns5__ItemActionRequest = ns5__ItemActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__itemActionRequest(soap, &soap_tmp___ns1__itemActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__itemActionRequest(soap, &soap_tmp___ns1__itemActionRequest, "-ns1:itemActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__itemActionRequest(soap, &soap_tmp___ns1__itemActionRequest, "-ns1:itemActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ItemActionResponse)
		return soap_closesock(soap);
	ns5__ItemActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ItemActionResponse->soap_get(soap, "ns5:ItemActionResponse", "ns5:itemActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__listDocumentRevisionsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__listDocumentRevisionsRequest *ns5__ListDocumentRevisionsRequest, ns5__listDocumentRevisionsResponse *ns5__ListDocumentRevisionsResponse)
{	struct __ns1__listDocumentRevisionsRequest soap_tmp___ns1__listDocumentRevisionsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ListDocumentRevisions";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__listDocumentRevisionsRequest.ns5__ListDocumentRevisionsRequest = ns5__ListDocumentRevisionsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__listDocumentRevisionsRequest(soap, &soap_tmp___ns1__listDocumentRevisionsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__listDocumentRevisionsRequest(soap, &soap_tmp___ns1__listDocumentRevisionsRequest, "-ns1:listDocumentRevisionsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__listDocumentRevisionsRequest(soap, &soap_tmp___ns1__listDocumentRevisionsRequest, "-ns1:listDocumentRevisionsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ListDocumentRevisionsResponse)
		return soap_closesock(soap);
	ns5__ListDocumentRevisionsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ListDocumentRevisionsResponse->soap_get(soap, "ns5:ListDocumentRevisionsResponse", "ns5:listDocumentRevisionsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyAppointmentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__modifyAppointmentRequest *ns5__ModifyAppointmentRequest, ns5__modifyAppointmentResponse *ns5__ModifyAppointmentResponse)
{	struct __ns1__modifyAppointmentRequest soap_tmp___ns1__modifyAppointmentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ModifyAppointment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyAppointmentRequest.ns5__ModifyAppointmentRequest = ns5__ModifyAppointmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyAppointmentRequest(soap, &soap_tmp___ns1__modifyAppointmentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyAppointmentRequest(soap, &soap_tmp___ns1__modifyAppointmentRequest, "-ns1:modifyAppointmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyAppointmentRequest(soap, &soap_tmp___ns1__modifyAppointmentRequest, "-ns1:modifyAppointmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ModifyAppointmentResponse)
		return soap_closesock(soap);
	ns5__ModifyAppointmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifyAppointmentResponse->soap_get(soap, "ns5:ModifyAppointmentResponse", "ns5:modifyAppointmentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyContactRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__modifyContactRequest *ns5__ModifyContactRequest, ns5__modifyContactResponse *ns5__ModifyContactResponse)
{	struct __ns1__modifyContactRequest soap_tmp___ns1__modifyContactRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ModifyContact";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyContactRequest.ns5__ModifyContactRequest = ns5__ModifyContactRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyContactRequest(soap, &soap_tmp___ns1__modifyContactRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyContactRequest(soap, &soap_tmp___ns1__modifyContactRequest, "-ns1:modifyContactRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyContactRequest(soap, &soap_tmp___ns1__modifyContactRequest, "-ns1:modifyContactRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ModifyContactResponse)
		return soap_closesock(soap);
	ns5__ModifyContactResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifyContactResponse->soap_get(soap, "ns5:ModifyContactResponse", "ns5:modifyContactResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyDataSourceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__modifyDataSourceRequest *ns5__ModifyDataSourceRequest, ns5__modifyDataSourceResponse *ns5__ModifyDataSourceResponse)
{	struct __ns1__modifyDataSourceRequest soap_tmp___ns1__modifyDataSourceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ModifyDataSource";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyDataSourceRequest.ns5__ModifyDataSourceRequest = ns5__ModifyDataSourceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyDataSourceRequest(soap, &soap_tmp___ns1__modifyDataSourceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyDataSourceRequest(soap, &soap_tmp___ns1__modifyDataSourceRequest, "-ns1:modifyDataSourceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyDataSourceRequest(soap, &soap_tmp___ns1__modifyDataSourceRequest, "-ns1:modifyDataSourceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ModifyDataSourceResponse)
		return soap_closesock(soap);
	ns5__ModifyDataSourceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifyDataSourceResponse->soap_get(soap, "ns5:ModifyDataSourceResponse", "ns5:modifyDataSourceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyFilterRulesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__modifyFilterRulesRequest *ns5__ModifyFilterRulesRequest, ns5__modifyFilterRulesResponse *ns5__ModifyFilterRulesResponse)
{	struct __ns1__modifyFilterRulesRequest soap_tmp___ns1__modifyFilterRulesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ModifyFilterRules";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyFilterRulesRequest.ns5__ModifyFilterRulesRequest = ns5__ModifyFilterRulesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyFilterRulesRequest(soap, &soap_tmp___ns1__modifyFilterRulesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyFilterRulesRequest(soap, &soap_tmp___ns1__modifyFilterRulesRequest, "-ns1:modifyFilterRulesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyFilterRulesRequest(soap, &soap_tmp___ns1__modifyFilterRulesRequest, "-ns1:modifyFilterRulesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ModifyFilterRulesResponse)
		return soap_closesock(soap);
	ns5__ModifyFilterRulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifyFilterRulesResponse->soap_get(soap, "ns5:ModifyFilterRulesResponse", "ns5:modifyFilterRulesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyMailboxMetadataRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__modifyMailboxMetadataRequest *ns5__ModifyMailboxMetadataRequest, ns5__modifyMailboxMetadataResponse *ns5__ModifyMailboxMetadataResponse)
{	struct __ns1__modifyMailboxMetadataRequest soap_tmp___ns1__modifyMailboxMetadataRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ModifyMailboxMetadata";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyMailboxMetadataRequest.ns5__ModifyMailboxMetadataRequest = ns5__ModifyMailboxMetadataRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyMailboxMetadataRequest(soap, &soap_tmp___ns1__modifyMailboxMetadataRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyMailboxMetadataRequest(soap, &soap_tmp___ns1__modifyMailboxMetadataRequest, "-ns1:modifyMailboxMetadataRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyMailboxMetadataRequest(soap, &soap_tmp___ns1__modifyMailboxMetadataRequest, "-ns1:modifyMailboxMetadataRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ModifyMailboxMetadataResponse)
		return soap_closesock(soap);
	ns5__ModifyMailboxMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifyMailboxMetadataResponse->soap_get(soap, "ns5:ModifyMailboxMetadataResponse", "ns5:modifyMailboxMetadataResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyOutgoingFilterRulesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__modifyOutgoingFilterRulesRequest *ns5__ModifyOutgoingFilterRulesRequest, ns5__modifyOutgoingFilterRulesResponse *ns5__ModifyOutgoingFilterRulesResponse)
{	struct __ns1__modifyOutgoingFilterRulesRequest soap_tmp___ns1__modifyOutgoingFilterRulesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ModifyOutgoingFilterRules";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyOutgoingFilterRulesRequest.ns5__ModifyOutgoingFilterRulesRequest = ns5__ModifyOutgoingFilterRulesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__modifyOutgoingFilterRulesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__modifyOutgoingFilterRulesRequest, "-ns1:modifyOutgoingFilterRulesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyOutgoingFilterRulesRequest(soap, &soap_tmp___ns1__modifyOutgoingFilterRulesRequest, "-ns1:modifyOutgoingFilterRulesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ModifyOutgoingFilterRulesResponse)
		return soap_closesock(soap);
	ns5__ModifyOutgoingFilterRulesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifyOutgoingFilterRulesResponse->soap_get(soap, "ns5:ModifyOutgoingFilterRulesResponse", "ns5:modifyOutgoingFilterRulesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifySearchFolderRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__modifySearchFolderRequest *ns5__ModifySearchFolderRequest, ns5__modifySearchFolderResponse *ns5__ModifySearchFolderResponse)
{	struct __ns1__modifySearchFolderRequest soap_tmp___ns1__modifySearchFolderRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ModifySearchFolder";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifySearchFolderRequest.ns5__ModifySearchFolderRequest = ns5__ModifySearchFolderRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifySearchFolderRequest(soap, &soap_tmp___ns1__modifySearchFolderRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifySearchFolderRequest(soap, &soap_tmp___ns1__modifySearchFolderRequest, "-ns1:modifySearchFolderRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifySearchFolderRequest(soap, &soap_tmp___ns1__modifySearchFolderRequest, "-ns1:modifySearchFolderRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ModifySearchFolderResponse)
		return soap_closesock(soap);
	ns5__ModifySearchFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifySearchFolderResponse->soap_get(soap, "ns5:ModifySearchFolderResponse", "ns5:modifySearchFolderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyTaskRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__modifyTaskRequest *ns5__ModifyTaskRequest, ns5__modifyTaskResponse *ns5__ModifyTaskResponse)
{	struct __ns1__modifyTaskRequest soap_tmp___ns1__modifyTaskRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/ModifyTask";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyTaskRequest.ns5__ModifyTaskRequest = ns5__ModifyTaskRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyTaskRequest(soap, &soap_tmp___ns1__modifyTaskRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyTaskRequest(soap, &soap_tmp___ns1__modifyTaskRequest, "-ns1:modifyTaskRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyTaskRequest(soap, &soap_tmp___ns1__modifyTaskRequest, "-ns1:modifyTaskRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__ModifyTaskResponse)
		return soap_closesock(soap);
	ns5__ModifyTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__ModifyTaskResponse->soap_get(soap, "ns5:ModifyTaskResponse", "ns5:modifyTaskResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__msgActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__msgActionRequest *ns5__MsgActionRequest, ns5__msgActionResponse *ns5__MsgActionResponse)
{	struct __ns1__msgActionRequest soap_tmp___ns1__msgActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/MsgAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__msgActionRequest.ns5__MsgActionRequest = ns5__MsgActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__msgActionRequest(soap, &soap_tmp___ns1__msgActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__msgActionRequest(soap, &soap_tmp___ns1__msgActionRequest, "-ns1:msgActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__msgActionRequest(soap, &soap_tmp___ns1__msgActionRequest, "-ns1:msgActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__MsgActionResponse)
		return soap_closesock(soap);
	ns5__MsgActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__MsgActionResponse->soap_get(soap, "ns5:MsgActionResponse", "ns5:msgActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__noOpRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__noOpRequest *ns5__NoOpRequest, ns5__noOpResponse *ns5__NoOpResponse)
{	struct __ns1__noOpRequest soap_tmp___ns1__noOpRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/NoOp";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__noOpRequest.ns5__NoOpRequest = ns5__NoOpRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__noOpRequest(soap, &soap_tmp___ns1__noOpRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__noOpRequest(soap, &soap_tmp___ns1__noOpRequest, "-ns1:noOpRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__noOpRequest(soap, &soap_tmp___ns1__noOpRequest, "-ns1:noOpRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__NoOpResponse)
		return soap_closesock(soap);
	ns5__NoOpResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__NoOpResponse->soap_get(soap, "ns5:NoOpResponse", "ns5:noOpResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__noteActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__noteActionRequest *ns5__NoteActionRequest, ns5__noteActionResponse *ns5__NoteActionResponse)
{	struct __ns1__noteActionRequest soap_tmp___ns1__noteActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/NoteAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__noteActionRequest.ns5__NoteActionRequest = ns5__NoteActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__noteActionRequest(soap, &soap_tmp___ns1__noteActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__noteActionRequest(soap, &soap_tmp___ns1__noteActionRequest, "-ns1:noteActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__noteActionRequest(soap, &soap_tmp___ns1__noteActionRequest, "-ns1:noteActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__NoteActionResponse)
		return soap_closesock(soap);
	ns5__NoteActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__NoteActionResponse->soap_get(soap, "ns5:NoteActionResponse", "ns5:noteActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__purgeRevisionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__purgeRevisionRequest *ns5__PurgeRevisionRequest, ns5__purgeRevisionResponse *ns5__PurgeRevisionResponse)
{	struct __ns1__purgeRevisionRequest soap_tmp___ns1__purgeRevisionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/PurgeRevision";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__purgeRevisionRequest.ns5__PurgeRevisionRequest = ns5__PurgeRevisionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__purgeRevisionRequest(soap, &soap_tmp___ns1__purgeRevisionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__purgeRevisionRequest(soap, &soap_tmp___ns1__purgeRevisionRequest, "-ns1:purgeRevisionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__purgeRevisionRequest(soap, &soap_tmp___ns1__purgeRevisionRequest, "-ns1:purgeRevisionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__PurgeRevisionResponse)
		return soap_closesock(soap);
	ns5__PurgeRevisionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__PurgeRevisionResponse->soap_get(soap, "ns5:PurgeRevisionResponse", "ns5:purgeRevisionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__rankingActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__rankingActionRequest *ns5__RankingActionRequest, ns5__rankingActionResponse *ns5__RankingActionResponse)
{	struct __ns1__rankingActionRequest soap_tmp___ns1__rankingActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/RankingAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__rankingActionRequest.ns5__RankingActionRequest = ns5__RankingActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__rankingActionRequest(soap, &soap_tmp___ns1__rankingActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__rankingActionRequest(soap, &soap_tmp___ns1__rankingActionRequest, "-ns1:rankingActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__rankingActionRequest(soap, &soap_tmp___ns1__rankingActionRequest, "-ns1:rankingActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__RankingActionResponse)
		return soap_closesock(soap);
	ns5__RankingActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__RankingActionResponse->soap_get(soap, "ns5:RankingActionResponse", "ns5:rankingActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__registerDeviceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__registerDeviceRequest *ns5__RegisterDeviceRequest, ns5__registerDeviceResponse *ns5__RegisterDeviceResponse)
{	struct __ns1__registerDeviceRequest soap_tmp___ns1__registerDeviceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/RegisterDevice";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__registerDeviceRequest.ns5__RegisterDeviceRequest = ns5__RegisterDeviceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__registerDeviceRequest(soap, &soap_tmp___ns1__registerDeviceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__registerDeviceRequest(soap, &soap_tmp___ns1__registerDeviceRequest, "-ns1:registerDeviceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__registerDeviceRequest(soap, &soap_tmp___ns1__registerDeviceRequest, "-ns1:registerDeviceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__RegisterDeviceResponse)
		return soap_closesock(soap);
	ns5__RegisterDeviceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__RegisterDeviceResponse->soap_get(soap, "ns5:RegisterDeviceResponse", "ns5:registerDeviceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeAttachmentsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__removeAttachmentsRequest *ns5__RemoveAttachmentsRequest, ns5__removeAttachmentsResponse *ns5__RemoveAttachmentsResponse)
{	struct __ns1__removeAttachmentsRequest soap_tmp___ns1__removeAttachmentsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/RemoveAttachments";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__removeAttachmentsRequest.ns5__RemoveAttachmentsRequest = ns5__RemoveAttachmentsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__removeAttachmentsRequest(soap, &soap_tmp___ns1__removeAttachmentsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__removeAttachmentsRequest(soap, &soap_tmp___ns1__removeAttachmentsRequest, "-ns1:removeAttachmentsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__removeAttachmentsRequest(soap, &soap_tmp___ns1__removeAttachmentsRequest, "-ns1:removeAttachmentsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__RemoveAttachmentsResponse)
		return soap_closesock(soap);
	ns5__RemoveAttachmentsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__RemoveAttachmentsResponse->soap_get(soap, "ns5:RemoveAttachmentsResponse", "ns5:removeAttachmentsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__revokePermissionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__revokePermissionRequest *ns5__RevokePermissionRequest, ns5__revokePermissionResponse *ns5__RevokePermissionResponse)
{	struct __ns1__revokePermissionRequest soap_tmp___ns1__revokePermissionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/RevokePermission";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__revokePermissionRequest.ns5__RevokePermissionRequest = ns5__RevokePermissionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__revokePermissionRequest(soap, &soap_tmp___ns1__revokePermissionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__revokePermissionRequest(soap, &soap_tmp___ns1__revokePermissionRequest, "-ns1:revokePermissionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__revokePermissionRequest(soap, &soap_tmp___ns1__revokePermissionRequest, "-ns1:revokePermissionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__RevokePermissionResponse)
		return soap_closesock(soap);
	ns5__RevokePermissionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__RevokePermissionResponse->soap_get(soap, "ns5:RevokePermissionResponse", "ns5:revokePermissionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__saveDocumentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__saveDocumentRequest *ns5__SaveDocumentRequest, ns5__saveDocumentResponse *ns5__SaveDocumentResponse)
{	struct __ns1__saveDocumentRequest soap_tmp___ns1__saveDocumentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SaveDocument";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__saveDocumentRequest.ns5__SaveDocumentRequest = ns5__SaveDocumentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__saveDocumentRequest(soap, &soap_tmp___ns1__saveDocumentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__saveDocumentRequest(soap, &soap_tmp___ns1__saveDocumentRequest, "-ns1:saveDocumentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__saveDocumentRequest(soap, &soap_tmp___ns1__saveDocumentRequest, "-ns1:saveDocumentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SaveDocumentResponse)
		return soap_closesock(soap);
	ns5__SaveDocumentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SaveDocumentResponse->soap_get(soap, "ns5:SaveDocumentResponse", "ns5:saveDocumentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__saveDraftRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__saveDraftRequest *ns5__SaveDraftRequest, ns5__saveDraftResponse *ns5__SaveDraftResponse)
{	struct __ns1__saveDraftRequest soap_tmp___ns1__saveDraftRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SaveDraft";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__saveDraftRequest.ns5__SaveDraftRequest = ns5__SaveDraftRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__saveDraftRequest(soap, &soap_tmp___ns1__saveDraftRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__saveDraftRequest(soap, &soap_tmp___ns1__saveDraftRequest, "-ns1:saveDraftRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__saveDraftRequest(soap, &soap_tmp___ns1__saveDraftRequest, "-ns1:saveDraftRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SaveDraftResponse)
		return soap_closesock(soap);
	ns5__SaveDraftResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SaveDraftResponse->soap_get(soap, "ns5:SaveDraftResponse", "ns5:saveDraftResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__searchConvRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__searchConvRequest *ns5__SearchConvRequest, ns5__searchConvResponse *ns5__SearchConvResponse)
{	struct __ns1__searchConvRequest soap_tmp___ns1__searchConvRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SearchConv";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__searchConvRequest.ns5__SearchConvRequest = ns5__SearchConvRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__searchConvRequest(soap, &soap_tmp___ns1__searchConvRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__searchConvRequest(soap, &soap_tmp___ns1__searchConvRequest, "-ns1:searchConvRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__searchConvRequest(soap, &soap_tmp___ns1__searchConvRequest, "-ns1:searchConvRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SearchConvResponse)
		return soap_closesock(soap);
	ns5__SearchConvResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SearchConvResponse->soap_get(soap, "ns5:SearchConvResponse", "ns5:searchConvResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__searchRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__searchRequest *ns5__SearchRequest, ns5__searchResponse *ns5__SearchResponse)
{	struct __ns1__searchRequest soap_tmp___ns1__searchRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/Search";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__searchRequest.ns5__SearchRequest = ns5__SearchRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__searchRequest(soap, &soap_tmp___ns1__searchRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__searchRequest(soap, &soap_tmp___ns1__searchRequest, "-ns1:searchRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__searchRequest(soap, &soap_tmp___ns1__searchRequest, "-ns1:searchRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SearchResponse)
		return soap_closesock(soap);
	ns5__SearchResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SearchResponse->soap_get(soap, "ns5:SearchResponse", "ns5:searchResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__sendDeliveryReportRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__sendDeliveryReportRequest *ns5__SendDeliveryReportRequest, ns5__sendDeliveryReportResponse *ns5__SendDeliveryReportResponse)
{	struct __ns1__sendDeliveryReportRequest soap_tmp___ns1__sendDeliveryReportRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SendDeliveryReport";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__sendDeliveryReportRequest.ns5__SendDeliveryReportRequest = ns5__SendDeliveryReportRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__sendDeliveryReportRequest(soap, &soap_tmp___ns1__sendDeliveryReportRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__sendDeliveryReportRequest(soap, &soap_tmp___ns1__sendDeliveryReportRequest, "-ns1:sendDeliveryReportRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__sendDeliveryReportRequest(soap, &soap_tmp___ns1__sendDeliveryReportRequest, "-ns1:sendDeliveryReportRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SendDeliveryReportResponse)
		return soap_closesock(soap);
	ns5__SendDeliveryReportResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SendDeliveryReportResponse->soap_get(soap, "ns5:SendDeliveryReportResponse", "ns5:sendDeliveryReportResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__sendInviteReplyRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__sendInviteReplyRequest *ns5__SendInviteReplyRequest, ns5__sendInviteReplyResponse *ns5__SendInviteReplyResponse)
{	struct __ns1__sendInviteReplyRequest soap_tmp___ns1__sendInviteReplyRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SendInviteReply";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__sendInviteReplyRequest.ns5__SendInviteReplyRequest = ns5__SendInviteReplyRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__sendInviteReplyRequest(soap, &soap_tmp___ns1__sendInviteReplyRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__sendInviteReplyRequest(soap, &soap_tmp___ns1__sendInviteReplyRequest, "-ns1:sendInviteReplyRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__sendInviteReplyRequest(soap, &soap_tmp___ns1__sendInviteReplyRequest, "-ns1:sendInviteReplyRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SendInviteReplyResponse)
		return soap_closesock(soap);
	ns5__SendInviteReplyResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SendInviteReplyResponse->soap_get(soap, "ns5:SendInviteReplyResponse", "ns5:sendInviteReplyResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__sendMsgRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__sendMsgRequest *ns5__SendMsgRequest, ns5__sendMsgResponse *ns5__SendMsgResponse)
{	struct __ns1__sendMsgRequest soap_tmp___ns1__sendMsgRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SendMsg";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__sendMsgRequest.ns5__SendMsgRequest = ns5__SendMsgRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__sendMsgRequest(soap, &soap_tmp___ns1__sendMsgRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__sendMsgRequest(soap, &soap_tmp___ns1__sendMsgRequest, "-ns1:sendMsgRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__sendMsgRequest(soap, &soap_tmp___ns1__sendMsgRequest, "-ns1:sendMsgRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SendMsgResponse)
		return soap_closesock(soap);
	ns5__SendMsgResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SendMsgResponse->soap_get(soap, "ns5:SendMsgResponse", "ns5:sendMsgResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__sendShareNotificationRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__sendShareNotificationRequest *ns5__SendShareNotificationRequest, ns5__sendShareNotificationResponse *ns5__SendShareNotificationResponse)
{	struct __ns1__sendShareNotificationRequest soap_tmp___ns1__sendShareNotificationRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SendShareNotification";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__sendShareNotificationRequest.ns5__SendShareNotificationRequest = ns5__SendShareNotificationRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__sendShareNotificationRequest(soap, &soap_tmp___ns1__sendShareNotificationRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__sendShareNotificationRequest(soap, &soap_tmp___ns1__sendShareNotificationRequest, "-ns1:sendShareNotificationRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__sendShareNotificationRequest(soap, &soap_tmp___ns1__sendShareNotificationRequest, "-ns1:sendShareNotificationRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SendShareNotificationResponse)
		return soap_closesock(soap);
	ns5__SendShareNotificationResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SendShareNotificationResponse->soap_get(soap, "ns5:SendShareNotificationResponse", "ns5:sendShareNotificationResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__sendVerificationCodeRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__sendVerificationCodeRequest *ns5__SendVerificationCodeRequest, ns5__sendVerificationCodeResponse *ns5__SendVerificationCodeResponse)
{	struct __ns1__sendVerificationCodeRequest soap_tmp___ns1__sendVerificationCodeRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SendVerificationCode";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__sendVerificationCodeRequest.ns5__SendVerificationCodeRequest = ns5__SendVerificationCodeRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__sendVerificationCodeRequest(soap, &soap_tmp___ns1__sendVerificationCodeRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__sendVerificationCodeRequest(soap, &soap_tmp___ns1__sendVerificationCodeRequest, "-ns1:sendVerificationCodeRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__sendVerificationCodeRequest(soap, &soap_tmp___ns1__sendVerificationCodeRequest, "-ns1:sendVerificationCodeRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SendVerificationCodeResponse)
		return soap_closesock(soap);
	ns5__SendVerificationCodeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SendVerificationCodeResponse->soap_get(soap, "ns5:SendVerificationCodeResponse", "ns5:sendVerificationCodeResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setAppointmentRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__setAppointmentRequest *ns5__SetAppointmentRequest, ns5__setAppointmentResponse *ns5__SetAppointmentResponse)
{	struct __ns1__setAppointmentRequest soap_tmp___ns1__setAppointmentRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SetAppointment";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setAppointmentRequest.ns5__SetAppointmentRequest = ns5__SetAppointmentRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setAppointmentRequest(soap, &soap_tmp___ns1__setAppointmentRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setAppointmentRequest(soap, &soap_tmp___ns1__setAppointmentRequest, "-ns1:setAppointmentRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setAppointmentRequest(soap, &soap_tmp___ns1__setAppointmentRequest, "-ns1:setAppointmentRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SetAppointmentResponse)
		return soap_closesock(soap);
	ns5__SetAppointmentResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SetAppointmentResponse->soap_get(soap, "ns5:SetAppointmentResponse", "ns5:setAppointmentResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setCustomMetadataRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__setCustomMetadataRequest *ns5__SetCustomMetadataRequest, ns5__setCustomMetadataResponse *ns5__SetCustomMetadataResponse)
{	struct __ns1__setCustomMetadataRequest soap_tmp___ns1__setCustomMetadataRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SetCustomMetadata";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setCustomMetadataRequest.ns5__SetCustomMetadataRequest = ns5__SetCustomMetadataRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setCustomMetadataRequest(soap, &soap_tmp___ns1__setCustomMetadataRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setCustomMetadataRequest(soap, &soap_tmp___ns1__setCustomMetadataRequest, "-ns1:setCustomMetadataRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setCustomMetadataRequest(soap, &soap_tmp___ns1__setCustomMetadataRequest, "-ns1:setCustomMetadataRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SetCustomMetadataResponse)
		return soap_closesock(soap);
	ns5__SetCustomMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SetCustomMetadataResponse->soap_get(soap, "ns5:SetCustomMetadataResponse", "ns5:setCustomMetadataResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setMailboxMetadataRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__setMailboxMetadataRequest *ns5__SetMailboxMetadataRequest, ns5__setMailboxMetadataResponse *ns5__SetMailboxMetadataResponse)
{	struct __ns1__setMailboxMetadataRequest soap_tmp___ns1__setMailboxMetadataRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SetMailboxMetadata";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setMailboxMetadataRequest.ns5__SetMailboxMetadataRequest = ns5__SetMailboxMetadataRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setMailboxMetadataRequest(soap, &soap_tmp___ns1__setMailboxMetadataRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setMailboxMetadataRequest(soap, &soap_tmp___ns1__setMailboxMetadataRequest, "-ns1:setMailboxMetadataRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setMailboxMetadataRequest(soap, &soap_tmp___ns1__setMailboxMetadataRequest, "-ns1:setMailboxMetadataRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SetMailboxMetadataResponse)
		return soap_closesock(soap);
	ns5__SetMailboxMetadataResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SetMailboxMetadataResponse->soap_get(soap, "ns5:SetMailboxMetadataResponse", "ns5:setMailboxMetadataResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__setTaskRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__setTaskRequest *ns5__SetTaskRequest, ns5__setTaskResponse *ns5__SetTaskResponse)
{	struct __ns1__setTaskRequest soap_tmp___ns1__setTaskRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SetTask";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__setTaskRequest.ns5__SetTaskRequest = ns5__SetTaskRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__setTaskRequest(soap, &soap_tmp___ns1__setTaskRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__setTaskRequest(soap, &soap_tmp___ns1__setTaskRequest, "-ns1:setTaskRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__setTaskRequest(soap, &soap_tmp___ns1__setTaskRequest, "-ns1:setTaskRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SetTaskResponse)
		return soap_closesock(soap);
	ns5__SetTaskResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SetTaskResponse->soap_get(soap, "ns5:SetTaskResponse", "ns5:setTaskResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__snoozeCalendarItemAlarmRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__snoozeCalendarItemAlarmRequest *ns5__SnoozeCalendarItemAlarmRequest, ns5__snoozeCalendarItemAlarmResponse *ns5__SnoozeCalendarItemAlarmResponse)
{	struct __ns1__snoozeCalendarItemAlarmRequest soap_tmp___ns1__snoozeCalendarItemAlarmRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/SnoozeCalendarItemAlarm";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__snoozeCalendarItemAlarmRequest.ns5__SnoozeCalendarItemAlarmRequest = ns5__SnoozeCalendarItemAlarmRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__snoozeCalendarItemAlarmRequest(soap, &soap_tmp___ns1__snoozeCalendarItemAlarmRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__snoozeCalendarItemAlarmRequest(soap, &soap_tmp___ns1__snoozeCalendarItemAlarmRequest, "-ns1:snoozeCalendarItemAlarmRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__snoozeCalendarItemAlarmRequest(soap, &soap_tmp___ns1__snoozeCalendarItemAlarmRequest, "-ns1:snoozeCalendarItemAlarmRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SnoozeCalendarItemAlarmResponse)
		return soap_closesock(soap);
	ns5__SnoozeCalendarItemAlarmResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SnoozeCalendarItemAlarmResponse->soap_get(soap, "ns5:SnoozeCalendarItemAlarmResponse", "ns5:snoozeCalendarItemAlarmResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__syncRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__syncRequest *ns5__SyncRequest, ns5__syncResponse *ns5__SyncResponse)
{	struct __ns1__syncRequest soap_tmp___ns1__syncRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/Sync";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__syncRequest.ns5__SyncRequest = ns5__SyncRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__syncRequest(soap, &soap_tmp___ns1__syncRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__syncRequest(soap, &soap_tmp___ns1__syncRequest, "-ns1:syncRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__syncRequest(soap, &soap_tmp___ns1__syncRequest, "-ns1:syncRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__SyncResponse)
		return soap_closesock(soap);
	ns5__SyncResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__SyncResponse->soap_get(soap, "ns5:SyncResponse", "ns5:syncResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__tagActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__tagActionRequest *ns5__TagActionRequest, ns5__tagActionResponse *ns5__TagActionResponse)
{	struct __ns1__tagActionRequest soap_tmp___ns1__tagActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/TagAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__tagActionRequest.ns5__TagActionRequest = ns5__TagActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__tagActionRequest(soap, &soap_tmp___ns1__tagActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__tagActionRequest(soap, &soap_tmp___ns1__tagActionRequest, "-ns1:tagActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__tagActionRequest(soap, &soap_tmp___ns1__tagActionRequest, "-ns1:tagActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TagActionResponse)
		return soap_closesock(soap);
	ns5__TagActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TagActionResponse->soap_get(soap, "ns5:TagActionResponse", "ns5:tagActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__testDataSourceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__testDataSourceRequest *ns5__TestDataSourceRequest, ns5__testDataSourceResponse *ns5__TestDataSourceResponse)
{	struct __ns1__testDataSourceRequest soap_tmp___ns1__testDataSourceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/TestDataSource";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__testDataSourceRequest.ns5__TestDataSourceRequest = ns5__TestDataSourceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__testDataSourceRequest(soap, &soap_tmp___ns1__testDataSourceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__testDataSourceRequest(soap, &soap_tmp___ns1__testDataSourceRequest, "-ns1:testDataSourceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__testDataSourceRequest(soap, &soap_tmp___ns1__testDataSourceRequest, "-ns1:testDataSourceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__TestDataSourceResponse)
		return soap_closesock(soap);
	ns5__TestDataSourceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__TestDataSourceResponse->soap_get(soap, "ns5:TestDataSourceResponse", "ns5:testDataSourceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__updateDeviceStatusRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__updateDeviceStatusRequest *ns5__UpdateDeviceStatusRequest, ns5__updateDeviceStatusResponse *ns5__UpdateDeviceStatusResponse)
{	struct __ns1__updateDeviceStatusRequest soap_tmp___ns1__updateDeviceStatusRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/UpdateDeviceStatus";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__updateDeviceStatusRequest.ns5__UpdateDeviceStatusRequest = ns5__UpdateDeviceStatusRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__updateDeviceStatusRequest(soap, &soap_tmp___ns1__updateDeviceStatusRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__updateDeviceStatusRequest(soap, &soap_tmp___ns1__updateDeviceStatusRequest, "-ns1:updateDeviceStatusRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__updateDeviceStatusRequest(soap, &soap_tmp___ns1__updateDeviceStatusRequest, "-ns1:updateDeviceStatusRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__UpdateDeviceStatusResponse)
		return soap_closesock(soap);
	ns5__UpdateDeviceStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__UpdateDeviceStatusResponse->soap_get(soap, "ns5:UpdateDeviceStatusResponse", "ns5:updateDeviceStatusResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__verifyCodeRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__verifyCodeRequest *ns5__VerifyCodeRequest, ns5__verifyCodeResponse *ns5__VerifyCodeResponse)
{	struct __ns1__verifyCodeRequest soap_tmp___ns1__verifyCodeRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/VerifyCode";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__verifyCodeRequest.ns5__VerifyCodeRequest = ns5__VerifyCodeRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__verifyCodeRequest(soap, &soap_tmp___ns1__verifyCodeRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__verifyCodeRequest(soap, &soap_tmp___ns1__verifyCodeRequest, "-ns1:verifyCodeRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__verifyCodeRequest(soap, &soap_tmp___ns1__verifyCodeRequest, "-ns1:verifyCodeRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__VerifyCodeResponse)
		return soap_closesock(soap);
	ns5__VerifyCodeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__VerifyCodeResponse->soap_get(soap, "ns5:VerifyCodeResponse", "ns5:verifyCodeResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__waitSetRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns5__waitSetRequest *ns5__WaitSetRequest, ns5__waitSetResponse *ns5__WaitSetResponse)
{	struct __ns1__waitSetRequest soap_tmp___ns1__waitSetRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraMail/WaitSet";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__waitSetRequest.ns5__WaitSetRequest = ns5__WaitSetRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__waitSetRequest(soap, &soap_tmp___ns1__waitSetRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__waitSetRequest(soap, &soap_tmp___ns1__waitSetRequest, "-ns1:waitSetRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__waitSetRequest(soap, &soap_tmp___ns1__waitSetRequest, "-ns1:waitSetRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns5__WaitSetResponse)
		return soap_closesock(soap);
	ns5__WaitSetResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns5__WaitSetResponse->soap_get(soap, "ns5:WaitSetResponse", "ns5:waitSetResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__becomeMasterRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__becomeMasterRequest *ns6__BecomeMasterRequest, ns6__becomeMasterResponse *ns6__BecomeMasterResponse)
{	struct __ns1__becomeMasterRequest soap_tmp___ns1__becomeMasterRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/BecomeMaster";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__becomeMasterRequest.ns6__BecomeMasterRequest = ns6__BecomeMasterRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__becomeMasterRequest(soap, &soap_tmp___ns1__becomeMasterRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__becomeMasterRequest(soap, &soap_tmp___ns1__becomeMasterRequest, "-ns1:becomeMasterRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__becomeMasterRequest(soap, &soap_tmp___ns1__becomeMasterRequest, "-ns1:becomeMasterRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__BecomeMasterResponse)
		return soap_closesock(soap);
	ns6__BecomeMasterResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__BecomeMasterResponse->soap_get(soap, "ns6:BecomeMasterResponse", "ns6:becomeMasterResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__bringDownServiceIPRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__bringDownServiceIPRequest *ns6__BringDownServiceIPRequest, ns6__bringDownServiceIPResponse *ns6__BringDownServiceIPResponse)
{	struct __ns1__bringDownServiceIPRequest soap_tmp___ns1__bringDownServiceIPRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/BringDownServiceIP";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__bringDownServiceIPRequest.ns6__BringDownServiceIPRequest = ns6__BringDownServiceIPRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__bringDownServiceIPRequest(soap, &soap_tmp___ns1__bringDownServiceIPRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__bringDownServiceIPRequest(soap, &soap_tmp___ns1__bringDownServiceIPRequest, "-ns1:bringDownServiceIPRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__bringDownServiceIPRequest(soap, &soap_tmp___ns1__bringDownServiceIPRequest, "-ns1:bringDownServiceIPRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__BringDownServiceIPResponse)
		return soap_closesock(soap);
	ns6__BringDownServiceIPResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__BringDownServiceIPResponse->soap_get(soap, "ns6:BringDownServiceIPResponse", "ns6:bringDownServiceIPResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__bringUpServiceIPRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__bringUpServiceIPRequest *ns6__BringUpServiceIPRequest, ns6__bringUpServiceIPResponse *ns6__BringUpServiceIPResponse)
{	struct __ns1__bringUpServiceIPRequest soap_tmp___ns1__bringUpServiceIPRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/BringUpServiceIP";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__bringUpServiceIPRequest.ns6__BringUpServiceIPRequest = ns6__BringUpServiceIPRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__bringUpServiceIPRequest(soap, &soap_tmp___ns1__bringUpServiceIPRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__bringUpServiceIPRequest(soap, &soap_tmp___ns1__bringUpServiceIPRequest, "-ns1:bringUpServiceIPRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__bringUpServiceIPRequest(soap, &soap_tmp___ns1__bringUpServiceIPRequest, "-ns1:bringUpServiceIPRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__BringUpServiceIPResponse)
		return soap_closesock(soap);
	ns6__BringUpServiceIPResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__BringUpServiceIPResponse->soap_get(soap, "ns6:BringUpServiceIPResponse", "ns6:bringUpServiceIPResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__replicationStatusRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__replicationStatusRequest *ns6__ReplicationStatusRequest, ns6__replicationStatusResponse *ns6__ReplicationStatusResponse)
{	struct __ns1__replicationStatusRequest soap_tmp___ns1__replicationStatusRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/ReplicationStatus";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__replicationStatusRequest.ns6__ReplicationStatusRequest = ns6__ReplicationStatusRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__replicationStatusRequest(soap, &soap_tmp___ns1__replicationStatusRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__replicationStatusRequest(soap, &soap_tmp___ns1__replicationStatusRequest, "-ns1:replicationStatusRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__replicationStatusRequest(soap, &soap_tmp___ns1__replicationStatusRequest, "-ns1:replicationStatusRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__ReplicationStatusResponse)
		return soap_closesock(soap);
	ns6__ReplicationStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__ReplicationStatusResponse->soap_get(soap, "ns6:ReplicationStatusResponse", "ns6:replicationStatusResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__startCatchupRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__startCatchupRequest *ns6__StartCatchupRequest, ns6__startCatchupResponse *ns6__StartCatchupResponse)
{	struct __ns1__startCatchupRequest soap_tmp___ns1__startCatchupRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/StartCatchup";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__startCatchupRequest.ns6__StartCatchupRequest = ns6__StartCatchupRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__startCatchupRequest(soap, &soap_tmp___ns1__startCatchupRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__startCatchupRequest(soap, &soap_tmp___ns1__startCatchupRequest, "-ns1:startCatchupRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__startCatchupRequest(soap, &soap_tmp___ns1__startCatchupRequest, "-ns1:startCatchupRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__StartCatchupResponse)
		return soap_closesock(soap);
	ns6__StartCatchupResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__StartCatchupResponse->soap_get(soap, "ns6:StartCatchupResponse", "ns6:startCatchupResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__startFailoverClientRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__startFailoverClientRequest *ns6__StartFailoverClientRequest, ns6__startFailoverClientResponse *ns6__StartFailoverClientResponse)
{	struct __ns1__startFailoverClientRequest soap_tmp___ns1__startFailoverClientRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/StartFailoverClient";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__startFailoverClientRequest.ns6__StartFailoverClientRequest = ns6__StartFailoverClientRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__startFailoverClientRequest(soap, &soap_tmp___ns1__startFailoverClientRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__startFailoverClientRequest(soap, &soap_tmp___ns1__startFailoverClientRequest, "-ns1:startFailoverClientRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__startFailoverClientRequest(soap, &soap_tmp___ns1__startFailoverClientRequest, "-ns1:startFailoverClientRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__StartFailoverClientResponse)
		return soap_closesock(soap);
	ns6__StartFailoverClientResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__StartFailoverClientResponse->soap_get(soap, "ns6:StartFailoverClientResponse", "ns6:startFailoverClientResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__startFailoverDaemonRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__startFailoverDaemonRequest *ns6__StartFailoverDaemonRequest, ns6__startFailoverDaemonResponse *ns6__StartFailoverDaemonResponse)
{	struct __ns1__startFailoverDaemonRequest soap_tmp___ns1__startFailoverDaemonRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/StartFailoverDaemon";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__startFailoverDaemonRequest.ns6__StartFailoverDaemonRequest = ns6__StartFailoverDaemonRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__startFailoverDaemonRequest(soap, &soap_tmp___ns1__startFailoverDaemonRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__startFailoverDaemonRequest(soap, &soap_tmp___ns1__startFailoverDaemonRequest, "-ns1:startFailoverDaemonRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__startFailoverDaemonRequest(soap, &soap_tmp___ns1__startFailoverDaemonRequest, "-ns1:startFailoverDaemonRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__StartFailoverDaemonResponse)
		return soap_closesock(soap);
	ns6__StartFailoverDaemonResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__StartFailoverDaemonResponse->soap_get(soap, "ns6:StartFailoverDaemonResponse", "ns6:startFailoverDaemonResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__stopFailoverClientRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__stopFailoverClientRequest *ns6__StopFailoverClientRequest, ns6__stopFailoverClientResponse *ns6__StopFailoverClientResponse)
{	struct __ns1__stopFailoverClientRequest soap_tmp___ns1__stopFailoverClientRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/StopFailoverClient";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__stopFailoverClientRequest.ns6__StopFailoverClientRequest = ns6__StopFailoverClientRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__stopFailoverClientRequest(soap, &soap_tmp___ns1__stopFailoverClientRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__stopFailoverClientRequest(soap, &soap_tmp___ns1__stopFailoverClientRequest, "-ns1:stopFailoverClientRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__stopFailoverClientRequest(soap, &soap_tmp___ns1__stopFailoverClientRequest, "-ns1:stopFailoverClientRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__StopFailoverClientResponse)
		return soap_closesock(soap);
	ns6__StopFailoverClientResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__StopFailoverClientResponse->soap_get(soap, "ns6:StopFailoverClientResponse", "ns6:stopFailoverClientResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__stopFailoverDaemonRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns6__stopFailoverDaemonRequest *ns6__StopFailoverDaemonRequest, ns6__stopFailoverDaemonResponse *ns6__StopFailoverDaemonResponse)
{	struct __ns1__stopFailoverDaemonRequest soap_tmp___ns1__stopFailoverDaemonRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraRepl/StopFailoverDaemon";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__stopFailoverDaemonRequest.ns6__StopFailoverDaemonRequest = ns6__StopFailoverDaemonRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__stopFailoverDaemonRequest(soap, &soap_tmp___ns1__stopFailoverDaemonRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__stopFailoverDaemonRequest(soap, &soap_tmp___ns1__stopFailoverDaemonRequest, "-ns1:stopFailoverDaemonRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__stopFailoverDaemonRequest(soap, &soap_tmp___ns1__stopFailoverDaemonRequest, "-ns1:stopFailoverDaemonRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns6__StopFailoverDaemonResponse)
		return soap_closesock(soap);
	ns6__StopFailoverDaemonResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns6__StopFailoverDaemonResponse->soap_get(soap, "ns6:StopFailoverDaemonResponse", "ns6:stopFailoverDaemonResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__cancelPendingRemoteWipeRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns7__cancelPendingRemoteWipeRequest *ns7__CancelPendingRemoteWipeRequest, ns7__cancelPendingRemoteWipeResponse *ns7__CancelPendingRemoteWipeResponse)
{	struct __ns1__cancelPendingRemoteWipeRequest soap_tmp___ns1__cancelPendingRemoteWipeRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraSync/CancelPendingRemoteWipe";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__cancelPendingRemoteWipeRequest.ns7__CancelPendingRemoteWipeRequest = ns7__CancelPendingRemoteWipeRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__cancelPendingRemoteWipeRequest(soap, &soap_tmp___ns1__cancelPendingRemoteWipeRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__cancelPendingRemoteWipeRequest(soap, &soap_tmp___ns1__cancelPendingRemoteWipeRequest, "-ns1:cancelPendingRemoteWipeRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__cancelPendingRemoteWipeRequest(soap, &soap_tmp___ns1__cancelPendingRemoteWipeRequest, "-ns1:cancelPendingRemoteWipeRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__CancelPendingRemoteWipeResponse)
		return soap_closesock(soap);
	ns7__CancelPendingRemoteWipeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__CancelPendingRemoteWipeResponse->soap_get(soap, "ns7:CancelPendingRemoteWipeResponse", "ns7:cancelPendingRemoteWipeResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getDeviceStatusRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns7__getDeviceStatusRequest *ns7__GetDeviceStatusRequest, ns7__getDeviceStatusResponse *ns7__GetDeviceStatusResponse)
{	struct __ns1__getDeviceStatusRequest soap_tmp___ns1__getDeviceStatusRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraSync/GetDeviceStatus";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getDeviceStatusRequest.ns7__GetDeviceStatusRequest = ns7__GetDeviceStatusRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getDeviceStatusRequest(soap, &soap_tmp___ns1__getDeviceStatusRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getDeviceStatusRequest(soap, &soap_tmp___ns1__getDeviceStatusRequest, "-ns1:getDeviceStatusRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getDeviceStatusRequest(soap, &soap_tmp___ns1__getDeviceStatusRequest, "-ns1:getDeviceStatusRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__GetDeviceStatusResponse)
		return soap_closesock(soap);
	ns7__GetDeviceStatusResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__GetDeviceStatusResponse->soap_get(soap, "ns7:GetDeviceStatusResponse", "ns7:getDeviceStatusResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__remoteWipeRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns7__remoteWipeRequest *ns7__RemoteWipeRequest, ns7__remoteWipeResponse *ns7__RemoteWipeResponse)
{	struct __ns1__remoteWipeRequest soap_tmp___ns1__remoteWipeRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraSync/RemoteWipe";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__remoteWipeRequest.ns7__RemoteWipeRequest = ns7__RemoteWipeRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__remoteWipeRequest(soap, &soap_tmp___ns1__remoteWipeRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__remoteWipeRequest(soap, &soap_tmp___ns1__remoteWipeRequest, "-ns1:remoteWipeRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__remoteWipeRequest(soap, &soap_tmp___ns1__remoteWipeRequest, "-ns1:remoteWipeRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__RemoteWipeResponse)
		return soap_closesock(soap);
	ns7__RemoteWipeResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__RemoteWipeResponse->soap_get(soap, "ns7:RemoteWipeResponse", "ns7:remoteWipeResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__removeDeviceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns7__removeDeviceRequest *ns7__RemoveDeviceRequest, ns7__removeDeviceResponse *ns7__RemoveDeviceResponse)
{	struct __ns1__removeDeviceRequest soap_tmp___ns1__removeDeviceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraSync/RemoveDevice";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__removeDeviceRequest.ns7__RemoveDeviceRequest = ns7__RemoveDeviceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__removeDeviceRequest(soap, &soap_tmp___ns1__removeDeviceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__removeDeviceRequest(soap, &soap_tmp___ns1__removeDeviceRequest, "-ns1:removeDeviceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__removeDeviceRequest(soap, &soap_tmp___ns1__removeDeviceRequest, "-ns1:removeDeviceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__RemoveDeviceResponse)
		return soap_closesock(soap);
	ns7__RemoveDeviceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__RemoveDeviceResponse->soap_get(soap, "ns7:RemoveDeviceResponse", "ns7:removeDeviceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__resumeDeviceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns7__resumeDeviceRequest *ns7__ResumeDeviceRequest, ns7__resumeDeviceResponse *ns7__ResumeDeviceResponse)
{	struct __ns1__resumeDeviceRequest soap_tmp___ns1__resumeDeviceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraSync/ResumeDevice";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__resumeDeviceRequest.ns7__ResumeDeviceRequest = ns7__ResumeDeviceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__resumeDeviceRequest(soap, &soap_tmp___ns1__resumeDeviceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__resumeDeviceRequest(soap, &soap_tmp___ns1__resumeDeviceRequest, "-ns1:resumeDeviceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__resumeDeviceRequest(soap, &soap_tmp___ns1__resumeDeviceRequest, "-ns1:resumeDeviceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__ResumeDeviceResponse)
		return soap_closesock(soap);
	ns7__ResumeDeviceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__ResumeDeviceResponse->soap_get(soap, "ns7:ResumeDeviceResponse", "ns7:resumeDeviceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__suspendDeviceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns7__suspendDeviceRequest *ns7__SuspendDeviceRequest, ns7__suspendDeviceResponse *ns7__SuspendDeviceResponse)
{	struct __ns1__suspendDeviceRequest soap_tmp___ns1__suspendDeviceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraSync/SuspendDevice";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__suspendDeviceRequest.ns7__SuspendDeviceRequest = ns7__SuspendDeviceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__suspendDeviceRequest(soap, &soap_tmp___ns1__suspendDeviceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__suspendDeviceRequest(soap, &soap_tmp___ns1__suspendDeviceRequest, "-ns1:suspendDeviceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__suspendDeviceRequest(soap, &soap_tmp___ns1__suspendDeviceRequest, "-ns1:suspendDeviceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns7__SuspendDeviceResponse)
		return soap_closesock(soap);
	ns7__SuspendDeviceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns7__SuspendDeviceResponse->soap_get(soap, "ns7:SuspendDeviceResponse", "ns7:suspendDeviceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__changeUCPasswordRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__changeUCPasswordRequest *ns8__ChangeUCPasswordRequest, ns8__changeUCPasswordResponse *ns8__ChangeUCPasswordResponse)
{	struct __ns1__changeUCPasswordRequest soap_tmp___ns1__changeUCPasswordRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/ChangeUCPassword";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__changeUCPasswordRequest.ns8__ChangeUCPasswordRequest = ns8__ChangeUCPasswordRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__changeUCPasswordRequest(soap, &soap_tmp___ns1__changeUCPasswordRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__changeUCPasswordRequest(soap, &soap_tmp___ns1__changeUCPasswordRequest, "-ns1:changeUCPasswordRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__changeUCPasswordRequest(soap, &soap_tmp___ns1__changeUCPasswordRequest, "-ns1:changeUCPasswordRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__ChangeUCPasswordResponse)
		return soap_closesock(soap);
	ns8__ChangeUCPasswordResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ChangeUCPasswordResponse->soap_get(soap, "ns8:ChangeUCPasswordResponse", "ns8:changeUCPasswordResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getUCInfoRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__getUCInfoRequest *ns8__GetUCInfoRequest, ns8__getUCInfoResponse *ns8__GetUCInfoResponse)
{	struct __ns1__getUCInfoRequest soap_tmp___ns1__getUCInfoRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/GetUCInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getUCInfoRequest.ns8__GetUCInfoRequest = ns8__GetUCInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getUCInfoRequest(soap, &soap_tmp___ns1__getUCInfoRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getUCInfoRequest(soap, &soap_tmp___ns1__getUCInfoRequest, "-ns1:getUCInfoRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getUCInfoRequest(soap, &soap_tmp___ns1__getUCInfoRequest, "-ns1:getUCInfoRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetUCInfoResponse)
		return soap_closesock(soap);
	ns8__GetUCInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetUCInfoResponse->soap_get(soap, "ns8:GetUCInfoResponse", "ns8:getUCInfoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getVoiceFeaturesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__getVoiceFeaturesRequest *ns8__GetVoiceFeaturesRequest, ns8__getVoiceFeaturesResponse *ns8__GetVoiceFeaturesResponse)
{	struct __ns1__getVoiceFeaturesRequest soap_tmp___ns1__getVoiceFeaturesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/GetVoiceFeatures";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getVoiceFeaturesRequest.ns8__GetVoiceFeaturesRequest = ns8__GetVoiceFeaturesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getVoiceFeaturesRequest(soap, &soap_tmp___ns1__getVoiceFeaturesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getVoiceFeaturesRequest(soap, &soap_tmp___ns1__getVoiceFeaturesRequest, "-ns1:getVoiceFeaturesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getVoiceFeaturesRequest(soap, &soap_tmp___ns1__getVoiceFeaturesRequest, "-ns1:getVoiceFeaturesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetVoiceFeaturesResponse)
		return soap_closesock(soap);
	ns8__GetVoiceFeaturesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVoiceFeaturesResponse->soap_get(soap, "ns8:GetVoiceFeaturesResponse", "ns8:getVoiceFeaturesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getVoiceFolderRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__getVoiceFolderRequest *ns8__GetVoiceFolderRequest, ns8__getVoiceFolderResponse *ns8__GetVoiceFolderResponse)
{	struct __ns1__getVoiceFolderRequest soap_tmp___ns1__getVoiceFolderRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/GetVoiceFolder";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getVoiceFolderRequest.ns8__GetVoiceFolderRequest = ns8__GetVoiceFolderRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getVoiceFolderRequest(soap, &soap_tmp___ns1__getVoiceFolderRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getVoiceFolderRequest(soap, &soap_tmp___ns1__getVoiceFolderRequest, "-ns1:getVoiceFolderRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getVoiceFolderRequest(soap, &soap_tmp___ns1__getVoiceFolderRequest, "-ns1:getVoiceFolderRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetVoiceFolderResponse)
		return soap_closesock(soap);
	ns8__GetVoiceFolderResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVoiceFolderResponse->soap_get(soap, "ns8:GetVoiceFolderResponse", "ns8:getVoiceFolderResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getVoiceInfoRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__getVoiceInfoRequest *ns8__GetVoiceInfoRequest, ns8__getVoiceInfoResponse *ns8__GetVoiceInfoResponse)
{	struct __ns1__getVoiceInfoRequest soap_tmp___ns1__getVoiceInfoRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/GetVoiceInfo";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getVoiceInfoRequest.ns8__GetVoiceInfoRequest = ns8__GetVoiceInfoRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getVoiceInfoRequest(soap, &soap_tmp___ns1__getVoiceInfoRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getVoiceInfoRequest(soap, &soap_tmp___ns1__getVoiceInfoRequest, "-ns1:getVoiceInfoRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getVoiceInfoRequest(soap, &soap_tmp___ns1__getVoiceInfoRequest, "-ns1:getVoiceInfoRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetVoiceInfoResponse)
		return soap_closesock(soap);
	ns8__GetVoiceInfoResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVoiceInfoResponse->soap_get(soap, "ns8:GetVoiceInfoResponse", "ns8:getVoiceInfoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__getVoiceMailPrefsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__getVoiceMailPrefsRequest *ns8__GetVoiceMailPrefsRequest, ns8__getVoiceMailPrefsResponse *ns8__GetVoiceMailPrefsResponse)
{	struct __ns1__getVoiceMailPrefsRequest soap_tmp___ns1__getVoiceMailPrefsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/GetVoiceMailPrefs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__getVoiceMailPrefsRequest.ns8__GetVoiceMailPrefsRequest = ns8__GetVoiceMailPrefsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__getVoiceMailPrefsRequest(soap, &soap_tmp___ns1__getVoiceMailPrefsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__getVoiceMailPrefsRequest(soap, &soap_tmp___ns1__getVoiceMailPrefsRequest, "-ns1:getVoiceMailPrefsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__getVoiceMailPrefsRequest(soap, &soap_tmp___ns1__getVoiceMailPrefsRequest, "-ns1:getVoiceMailPrefsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__GetVoiceMailPrefsResponse)
		return soap_closesock(soap);
	ns8__GetVoiceMailPrefsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__GetVoiceMailPrefsResponse->soap_get(soap, "ns8:GetVoiceMailPrefsResponse", "ns8:getVoiceMailPrefsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyFromNumRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__modifyFromNumRequest *ns8__ModifyFromNumRequest, ns8__modifyFromNumResponse *ns8__ModifyFromNumResponse)
{	struct __ns1__modifyFromNumRequest soap_tmp___ns1__modifyFromNumRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/ModifyFromNum";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyFromNumRequest.ns8__ModifyFromNumRequest = ns8__ModifyFromNumRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyFromNumRequest(soap, &soap_tmp___ns1__modifyFromNumRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyFromNumRequest(soap, &soap_tmp___ns1__modifyFromNumRequest, "-ns1:modifyFromNumRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyFromNumRequest(soap, &soap_tmp___ns1__modifyFromNumRequest, "-ns1:modifyFromNumRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__ModifyFromNumResponse)
		return soap_closesock(soap);
	ns8__ModifyFromNumResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ModifyFromNumResponse->soap_get(soap, "ns8:ModifyFromNumResponse", "ns8:modifyFromNumResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyVoiceFeaturesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__modifyVoiceFeaturesRequest *ns8__ModifyVoiceFeaturesRequest, ns8__modifyVoiceFeaturesResponse *ns8__ModifyVoiceFeaturesResponse)
{	struct __ns1__modifyVoiceFeaturesRequest soap_tmp___ns1__modifyVoiceFeaturesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/ModifyVoiceFeatures";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyVoiceFeaturesRequest.ns8__ModifyVoiceFeaturesRequest = ns8__ModifyVoiceFeaturesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyVoiceFeaturesRequest(soap, &soap_tmp___ns1__modifyVoiceFeaturesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyVoiceFeaturesRequest(soap, &soap_tmp___ns1__modifyVoiceFeaturesRequest, "-ns1:modifyVoiceFeaturesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyVoiceFeaturesRequest(soap, &soap_tmp___ns1__modifyVoiceFeaturesRequest, "-ns1:modifyVoiceFeaturesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__ModifyVoiceFeaturesResponse)
		return soap_closesock(soap);
	ns8__ModifyVoiceFeaturesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ModifyVoiceFeaturesResponse->soap_get(soap, "ns8:ModifyVoiceFeaturesResponse", "ns8:modifyVoiceFeaturesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyVoiceMailPinRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__modifyVoiceMailPinRequest *ns8__ModifyVoiceMailPinRequest, ns8__modifyVoiceMailPinResponse *ns8__ModifyVoiceMailPinResponse)
{	struct __ns1__modifyVoiceMailPinRequest soap_tmp___ns1__modifyVoiceMailPinRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/ModifyVoiceMailPin";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyVoiceMailPinRequest.ns8__ModifyVoiceMailPinRequest = ns8__ModifyVoiceMailPinRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyVoiceMailPinRequest(soap, &soap_tmp___ns1__modifyVoiceMailPinRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyVoiceMailPinRequest(soap, &soap_tmp___ns1__modifyVoiceMailPinRequest, "-ns1:modifyVoiceMailPinRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyVoiceMailPinRequest(soap, &soap_tmp___ns1__modifyVoiceMailPinRequest, "-ns1:modifyVoiceMailPinRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__ModifyVoiceMailPinResponse)
		return soap_closesock(soap);
	ns8__ModifyVoiceMailPinResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ModifyVoiceMailPinResponse->soap_get(soap, "ns8:ModifyVoiceMailPinResponse", "ns8:modifyVoiceMailPinResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__modifyVoiceMailPrefsRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__modifyVoiceMailPrefsRequest *ns8__ModifyVoiceMailPrefsRequest, ns8__modifyVoiceMailPrefsResponse *ns8__ModifyVoiceMailPrefsResponse)
{	struct __ns1__modifyVoiceMailPrefsRequest soap_tmp___ns1__modifyVoiceMailPrefsRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/ModifyVoiceMailPrefs";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__modifyVoiceMailPrefsRequest.ns8__ModifyVoiceMailPrefsRequest = ns8__ModifyVoiceMailPrefsRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__modifyVoiceMailPrefsRequest(soap, &soap_tmp___ns1__modifyVoiceMailPrefsRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__modifyVoiceMailPrefsRequest(soap, &soap_tmp___ns1__modifyVoiceMailPrefsRequest, "-ns1:modifyVoiceMailPrefsRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__modifyVoiceMailPrefsRequest(soap, &soap_tmp___ns1__modifyVoiceMailPrefsRequest, "-ns1:modifyVoiceMailPrefsRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__ModifyVoiceMailPrefsResponse)
		return soap_closesock(soap);
	ns8__ModifyVoiceMailPrefsResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ModifyVoiceMailPrefsResponse->soap_get(soap, "ns8:ModifyVoiceMailPrefsResponse", "ns8:modifyVoiceMailPrefsResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__resetVoiceFeaturesRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__resetVoiceFeaturesRequest *ns8__ResetVoiceFeaturesRequest, ns8__resetVoiceFeaturesResponse *ns8__ResetVoiceFeaturesResponse)
{	struct __ns1__resetVoiceFeaturesRequest soap_tmp___ns1__resetVoiceFeaturesRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/ResetVoiceFeatures";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__resetVoiceFeaturesRequest.ns8__ResetVoiceFeaturesRequest = ns8__ResetVoiceFeaturesRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__resetVoiceFeaturesRequest(soap, &soap_tmp___ns1__resetVoiceFeaturesRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__resetVoiceFeaturesRequest(soap, &soap_tmp___ns1__resetVoiceFeaturesRequest, "-ns1:resetVoiceFeaturesRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__resetVoiceFeaturesRequest(soap, &soap_tmp___ns1__resetVoiceFeaturesRequest, "-ns1:resetVoiceFeaturesRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__ResetVoiceFeaturesResponse)
		return soap_closesock(soap);
	ns8__ResetVoiceFeaturesResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__ResetVoiceFeaturesResponse->soap_get(soap, "ns8:ResetVoiceFeaturesResponse", "ns8:resetVoiceFeaturesResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__searchVoiceRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__searchVoiceRequest *ns8__SearchVoiceRequest, ns8__searchVoiceResponse *ns8__SearchVoiceResponse)
{	struct __ns1__searchVoiceRequest soap_tmp___ns1__searchVoiceRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/SearchVoice";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__searchVoiceRequest.ns8__SearchVoiceRequest = ns8__SearchVoiceRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__searchVoiceRequest(soap, &soap_tmp___ns1__searchVoiceRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__searchVoiceRequest(soap, &soap_tmp___ns1__searchVoiceRequest, "-ns1:searchVoiceRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__searchVoiceRequest(soap, &soap_tmp___ns1__searchVoiceRequest, "-ns1:searchVoiceRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__SearchVoiceResponse)
		return soap_closesock(soap);
	ns8__SearchVoiceResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__SearchVoiceResponse->soap_get(soap, "ns8:SearchVoiceResponse", "ns8:searchVoiceResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__uploadVoiceMailRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__uploadVoiceMailRequest *ns8__UploadVoiceMailRequest, ns8__uploadVoiceMailResponse *ns8__UploadVoiceMailResponse)
{	struct __ns1__uploadVoiceMailRequest soap_tmp___ns1__uploadVoiceMailRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/UploadVoiceMail";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__uploadVoiceMailRequest.ns8__UploadVoiceMailRequest = ns8__UploadVoiceMailRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__uploadVoiceMailRequest(soap, &soap_tmp___ns1__uploadVoiceMailRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__uploadVoiceMailRequest(soap, &soap_tmp___ns1__uploadVoiceMailRequest, "-ns1:uploadVoiceMailRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__uploadVoiceMailRequest(soap, &soap_tmp___ns1__uploadVoiceMailRequest, "-ns1:uploadVoiceMailRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__UploadVoiceMailResponse)
		return soap_closesock(soap);
	ns8__UploadVoiceMailResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__UploadVoiceMailResponse->soap_get(soap, "ns8:UploadVoiceMailResponse", "ns8:uploadVoiceMailResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__voiceMsgActionRequest(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns8__voiceMsgActionRequest *ns8__VoiceMsgActionRequest, ns8__voiceMsgActionResponse *ns8__VoiceMsgActionResponse)
{	struct __ns1__voiceMsgActionRequest soap_tmp___ns1__voiceMsgActionRequest;
	if (!soap_endpoint)
		soap_endpoint = "https://mail.ordzhonikidze-sanatorium.ru:443/service/soap/";
	if (!soap_action)
		soap_action = "urn:zimbraVoice/VoiceMsgAction";
	soap->encodingStyle = NULL;
	soap_tmp___ns1__voiceMsgActionRequest.ns8__VoiceMsgActionRequest = ns8__VoiceMsgActionRequest;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns1__voiceMsgActionRequest(soap, &soap_tmp___ns1__voiceMsgActionRequest);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns1__voiceMsgActionRequest(soap, &soap_tmp___ns1__voiceMsgActionRequest, "-ns1:voiceMsgActionRequest", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns1__voiceMsgActionRequest(soap, &soap_tmp___ns1__voiceMsgActionRequest, "-ns1:voiceMsgActionRequest", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns8__VoiceMsgActionResponse)
		return soap_closesock(soap);
	ns8__VoiceMsgActionResponse->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns8__VoiceMsgActionResponse->soap_get(soap, "ns8:VoiceMsgActionResponse", "ns8:voiceMsgActionResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
